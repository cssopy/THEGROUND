{"ast":null,"code":"import { invariant } from '@react-dnd/invariant';\nlet isCallingCanDrop = false;\nexport class DropTargetMonitorImpl {\n  receiveHandlerId(targetId) {\n    this.targetId = targetId;\n  }\n\n  getHandlerId() {\n    return this.targetId;\n  }\n\n  subscribeToStateChange(listener, options) {\n    return this.internalMonitor.subscribeToStateChange(listener, options);\n  }\n\n  canDrop() {\n    // Cut out early if the target id has not been set. This should prevent errors\n    // where the user has an older version of dnd-core like in\n    // https://github.com/react-dnd/react-dnd/issues/1310\n    if (!this.targetId) {\n      return false;\n    }\n\n    invariant(!isCallingCanDrop, 'You may not call monitor.canDrop() inside your canDrop() implementation. ' + 'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor');\n\n    try {\n      isCallingCanDrop = true;\n      return this.internalMonitor.canDropOnTarget(this.targetId);\n    } finally {\n      isCallingCanDrop = false;\n    }\n  }\n\n  isOver(options) {\n    if (!this.targetId) {\n      return false;\n    }\n\n    return this.internalMonitor.isOverTarget(this.targetId, options);\n  }\n\n  getItemType() {\n    return this.internalMonitor.getItemType();\n  }\n\n  getItem() {\n    return this.internalMonitor.getItem();\n  }\n\n  getDropResult() {\n    return this.internalMonitor.getDropResult();\n  }\n\n  didDrop() {\n    return this.internalMonitor.didDrop();\n  }\n\n  getInitialClientOffset() {\n    return this.internalMonitor.getInitialClientOffset();\n  }\n\n  getInitialSourceClientOffset() {\n    return this.internalMonitor.getInitialSourceClientOffset();\n  }\n\n  getSourceClientOffset() {\n    return this.internalMonitor.getSourceClientOffset();\n  }\n\n  getClientOffset() {\n    return this.internalMonitor.getClientOffset();\n  }\n\n  getDifferenceFromInitialOffset() {\n    return this.internalMonitor.getDifferenceFromInitialOffset();\n  }\n\n  constructor(manager) {\n    this.targetId = null;\n    this.internalMonitor = manager.getMonitor();\n  }\n\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AAYA,IAAIC,gBAAgB,GAAG,KAAvB;AAEA,OAAO,MAAMC,qBAAN,CAA2B;EAQjCC,gBAAuB,CAACC,QAAD,EAAoC;IAC1D,KAAKA,QAAL,GAAgBA,QAAhB;EACA;;EAEDC,YAAmB,GAAsB;IACxC,OAAO,KAAKD,QAAZ;EACA;;EAEDE,sBAA6B,CAC5BC,QAD4B,EAE5BC,OAF4B,EAGd;IACd,OAAO,KAAKC,eAAL,CAAqBH,sBAArB,CAA4CC,QAA5C,EAAsDC,OAAtD,CAAP;EACA;;EAEDE,OAAc,GAAY;IACzB;IACA;IACA;IACA,IAAI,CAAC,KAAKN,QAAV,EAAoB;MACnB,OAAO,KAAP;IACA;;IACDJ,SAAS,CACR,CAACC,gBADO,EAER,8EACC,8EAHO,CAATD;;IAMA,IAAI;MACHC,gBAAgB,GAAG,IAAnBA;MACA,OAAO,KAAKQ,eAAL,CAAqBE,eAArB,CAAqC,KAAKP,QAA1C,CAAP;IACA,CAHD,SAGU;MACTH,gBAAgB,GAAG,KAAnBA;IACA;EACD;;EAEDW,MAAa,CAACJ,OAAD,EAA2C;IACvD,IAAI,CAAC,KAAKJ,QAAV,EAAoB;MACnB,OAAO,KAAP;IACA;;IACD,OAAO,KAAKK,eAAL,CAAqBI,YAArB,CAAkC,KAAKT,QAAvC,EAAiDI,OAAjD,CAAP;EACA;;EAEDM,WAAkB,GAAsB;IACvC,OAAO,KAAKL,eAAL,CAAqBK,WAArB,EAAP;EACA;;EAEDC,OAAc,GAAQ;IACrB,OAAO,KAAKN,eAAL,CAAqBM,OAArB,EAAP;EACA;;EAEDC,aAAoB,GAAQ;IAC3B,OAAO,KAAKP,eAAL,CAAqBO,aAArB,EAAP;EACA;;EAEDC,OAAc,GAAY;IACzB,OAAO,KAAKR,eAAL,CAAqBQ,OAArB,EAAP;EACA;;EAEDC,sBAA6B,GAAmB;IAC/C,OAAO,KAAKT,eAAL,CAAqBS,sBAArB,EAAP;EACA;;EAEDC,4BAAmC,GAAmB;IACrD,OAAO,KAAKV,eAAL,CAAqBU,4BAArB,EAAP;EACA;;EAEDC,qBAA4B,GAAmB;IAC9C,OAAO,KAAKX,eAAL,CAAqBW,qBAArB,EAAP;EACA;;EAEDC,eAAsB,GAAmB;IACxC,OAAO,KAAKZ,eAAL,CAAqBY,eAArB,EAAP;EACA;;EAEDC,8BAAqC,GAAmB;IACvD,OAAO,KAAKb,eAAL,CAAqBa,8BAArB,EAAP;EACA;;EAjFDC,YAAmBC,OAAnB,EAA6C;IAF7C,KAAQpB,QAAR,GAAsC,IAAtC;IAGC,KAAKK,eAAL,GAAuBe,OAAO,CAACC,UAARD,EAAvB;EACA;;AANgC","names":["invariant","isCallingCanDrop","DropTargetMonitorImpl","receiveHandlerId","targetId","getHandlerId","subscribeToStateChange","listener","options","internalMonitor","canDrop","canDropOnTarget","isOver","isOverTarget","getItemType","getItem","getDropResult","didDrop","getInitialClientOffset","getInitialSourceClientOffset","getSourceClientOffset","getClientOffset","getDifferenceFromInitialOffset","constructor","manager","getMonitor"],"sources":["C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\react-dnd\\src\\internals\\DropTargetMonitorImpl.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type {\n\tDragDropManager,\n\tDragDropMonitor,\n\tIdentifier,\n\tListener,\n\tUnsubscribe,\n\tXYCoord,\n} from 'dnd-core'\n\nimport type { DropTargetMonitor } from '../types/index.js'\n\nlet isCallingCanDrop = false\n\nexport class DropTargetMonitorImpl implements DropTargetMonitor {\n\tprivate internalMonitor: DragDropMonitor\n\tprivate targetId: Identifier | null = null\n\n\tpublic constructor(manager: DragDropManager) {\n\t\tthis.internalMonitor = manager.getMonitor()\n\t}\n\n\tpublic receiveHandlerId(targetId: Identifier | null): void {\n\t\tthis.targetId = targetId\n\t}\n\n\tpublic getHandlerId(): Identifier | null {\n\t\treturn this.targetId\n\t}\n\n\tpublic subscribeToStateChange(\n\t\tlistener: Listener,\n\t\toptions?: { handlerIds?: Identifier[] },\n\t): Unsubscribe {\n\t\treturn this.internalMonitor.subscribeToStateChange(listener, options)\n\t}\n\n\tpublic canDrop(): boolean {\n\t\t// Cut out early if the target id has not been set. This should prevent errors\n\t\t// where the user has an older version of dnd-core like in\n\t\t// https://github.com/react-dnd/react-dnd/issues/1310\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\tinvariant(\n\t\t\t!isCallingCanDrop,\n\t\t\t'You may not call monitor.canDrop() inside your canDrop() implementation. ' +\n\t\t\t\t'Read more: http://react-dnd.github.io/react-dnd/docs/api/drop-target-monitor',\n\t\t)\n\n\t\ttry {\n\t\t\tisCallingCanDrop = true\n\t\t\treturn this.internalMonitor.canDropOnTarget(this.targetId)\n\t\t} finally {\n\t\t\tisCallingCanDrop = false\n\t\t}\n\t}\n\n\tpublic isOver(options?: { shallow?: boolean }): boolean {\n\t\tif (!this.targetId) {\n\t\t\treturn false\n\t\t}\n\t\treturn this.internalMonitor.isOverTarget(this.targetId, options)\n\t}\n\n\tpublic getItemType(): Identifier | null {\n\t\treturn this.internalMonitor.getItemType()\n\t}\n\n\tpublic getItem(): any {\n\t\treturn this.internalMonitor.getItem()\n\t}\n\n\tpublic getDropResult(): any {\n\t\treturn this.internalMonitor.getDropResult()\n\t}\n\n\tpublic didDrop(): boolean {\n\t\treturn this.internalMonitor.didDrop()\n\t}\n\n\tpublic getInitialClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialClientOffset()\n\t}\n\n\tpublic getInitialSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getInitialSourceClientOffset()\n\t}\n\n\tpublic getSourceClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getSourceClientOffset()\n\t}\n\n\tpublic getClientOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getClientOffset()\n\t}\n\n\tpublic getDifferenceFromInitialOffset(): XYCoord | null {\n\t\treturn this.internalMonitor.getDifferenceFromInitialOffset()\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}