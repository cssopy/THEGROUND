{"ast":null,"code":"import { createFactory as t, Component as r } from \"react\";\nimport { polyfill as n } from \"react-lifecycles-compat\";\n\nvar e = function (t) {\n  return \"string\" == typeof t ? t : t ? t.displayName || t.name || \"Component\" : void 0;\n},\n    o = function (t, r) {\n  return function (n) {\n    return n[t] = r, n;\n  };\n},\n    u = function (t) {\n  return o(\"displayName\", t);\n},\n    p = Object.prototype.hasOwnProperty;\n\nfunction c(t, r) {\n  return t === r ? 0 !== t || 0 !== r || 1 / t == 1 / r : t != t && r != r;\n}\n\nfunction i(t, r) {\n  if (c(t, r)) return !0;\n  if (\"object\" != typeof t || null === t || \"object\" != typeof r || null === r) return !1;\n  var n = Object.keys(t),\n      e = Object.keys(r);\n  if (n.length !== e.length) return !1;\n\n  for (var o = 0; o < n.length; o++) if (!p.call(r, n[o]) || !c(t[n[o]], r[n[o]])) return !1;\n\n  return !0;\n}\n\nfunction a() {\n  return a = Object.assign || function (t) {\n    for (var r = 1; r < arguments.length; r++) {\n      var n = arguments[r];\n\n      for (var e in n) Object.prototype.hasOwnProperty.call(n, e) && (t[e] = n[e]);\n    }\n\n    return t;\n  }, a.apply(this, arguments);\n}\n\nfunction f(t, r) {\n  t.prototype = Object.create(r.prototype), t.prototype.constructor = t, s(t, r);\n}\n\nfunction s(t, r) {\n  return s = Object.setPrototypeOf || function (t, r) {\n    return t.__proto__ = r, t;\n  }, s(t, r);\n}\n\nvar l = function (t, r) {\n  return r + \"(\" + e(t) + \")\";\n},\n    v = function (n) {\n  return function (e) {\n    var o = t(e),\n        p = function (t) {\n      function r() {\n        return t.apply(this, arguments) || this;\n      }\n\n      f(r, t);\n      var e = r.prototype;\n      return e.shouldComponentUpdate = function (t) {\n        return n(this.props, t);\n      }, e.render = function () {\n        return o(this.props);\n      }, r;\n    }(r);\n\n    return \"production\" !== process.env.NODE_ENV ? u(l(e, \"shouldUpdate\"))(p) : p;\n  };\n},\n    y = function (t) {\n  var r = v(function (t, r) {\n    return !i(t, r);\n  });\n  return \"production\" !== process.env.NODE_ENV ? u(l(t, \"pure\"))(r(t)) : r(t);\n},\n    h = function () {\n  for (var t = arguments.length, r = new Array(t), n = 0; n < t; n++) r[n] = arguments[n];\n\n  return r.reduce(function (t, r) {\n    return function () {\n      return t(r.apply(void 0, arguments));\n    };\n  }, function (t) {\n    return t;\n  });\n},\n    d = function (t, r) {\n  for (var n = {}, e = 0; e < r.length; e++) {\n    var o = r[e];\n    t.hasOwnProperty(o) && (n[o] = t[o]);\n  }\n\n  return n;\n},\n    O = function (e, o) {\n  return function (p) {\n    var c = t(p),\n        s = \"function\" == typeof e ? e : function (t, r) {\n      return !i(d(t, e), d(r, e));\n    },\n        v = function (t) {\n      function r() {\n        for (var r, n = arguments.length, e = new Array(n), u = 0; u < n; u++) e[u] = arguments[u];\n\n        return (r = t.call.apply(t, [this].concat(e)) || this).state = {\n          computedProps: o(r.props),\n          prevProps: r.props\n        }, r;\n      }\n\n      return f(r, t), r.getDerivedStateFromProps = function (t, r) {\n        return s(r.prevProps, t) ? {\n          computedProps: o(t),\n          prevProps: t\n        } : {\n          prevProps: t\n        };\n      }, r.prototype.render = function () {\n        return c(a({}, this.props, this.state.computedProps));\n      }, r;\n    }(r);\n\n    return n(v), \"production\" !== process.env.NODE_ENV ? u(l(p, \"withPropsOnChange\"))(v) : v;\n  };\n},\n    P = function (r) {\n  return function (n) {\n    var e = t(n),\n        o = function (t) {\n      return e(t);\n    };\n\n    return o.defaultProps = r, \"production\" !== process.env.NODE_ENV ? u(l(n, \"defaultProps\"))(o) : o;\n  };\n},\n    N = function (r) {\n  var n,\n      e = (n = function (t) {\n    return a({}, t, \"function\" == typeof r ? r(t) : r);\n  }, function (r) {\n    var e = t(r),\n        o = function (t) {\n      return e(n(t));\n    };\n\n    return \"production\" !== process.env.NODE_ENV ? u(l(r, \"mapProps\"))(o) : o;\n  });\n  return \"production\" !== process.env.NODE_ENV ? function (t) {\n    return u(l(t, \"withProps\"))(e(t));\n  } : e;\n},\n    m = function (t) {\n  return o(\"propTypes\", t);\n},\n    E = function (n, e, o) {\n  return function (p) {\n    var c = t(p),\n        i = function (t) {\n      function r() {\n        for (var r, n = arguments.length, e = new Array(n), u = 0; u < n; u++) e[u] = arguments[u];\n\n        return (r = t.call.apply(t, [this].concat(e)) || this).state = {\n          stateValue: \"function\" == typeof o ? o(r.props) : o\n        }, r.updateStateValue = function (t, n) {\n          return r.setState(function (r) {\n            var n = r.stateValue;\n            return {\n              stateValue: \"function\" == typeof t ? t(n) : t\n            };\n          }, n);\n        }, r;\n      }\n\n      return f(r, t), r.prototype.render = function () {\n        var t;\n        return c(a({}, this.props, ((t = {})[n] = this.state.stateValue, t[e] = this.updateStateValue, t)));\n      }, r;\n    }(r);\n\n    return \"production\" !== process.env.NODE_ENV ? u(l(p, \"withState\"))(i) : i;\n  };\n};\n\nexport { h as compose, P as defaultProps, e as getDisplayName, y as pure, u as setDisplayName, m as setPropTypes, o as setStatic, i as shallowEqual, v as shouldUpdate, N as withProps, O as withPropsOnChange, E as withState, l as wrapDisplayName };","map":{"version":3,"mappings":"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","names":["getDisplayName","component","displayName","name","setStatic","key","value","BaseComponent","setDisplayName","hasOwnProperty","Object","prototype","is","x","y","shallowEqual","objA","objB","keysA","keys","keysB","length","i","call","t","wrapDisplayName","hocName","shouldUpdate","test","factory","createFactory","ShouldUpdate","shouldComponentUpdate","nextProps","this","props","render","Component","process","env","NODE_ENV","pure","hoc","compose","funcs","reduce","a","b","arg","pick","obj","result","withPropsOnChange","shouldMapOrKeys","propsMapper","shouldMap","WithPropsOnChange","state","computedProps","_this","prevProps","getDerivedStateFromProps","prevState","polyfill","defaultProps","DefaultProps","ownerProps","withProps","createProps","MapProps","setPropTypes","propTypes","withState","stateName","stateUpdaterName","initialState","WithState","stateValue","updateStateValue","updateFn","callback","setState"],"sources":["C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\getDisplayName.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\setStatic.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\setDisplayName.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\shallowEqual.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\wrapDisplayName.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\shouldUpdate.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\pure.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\compose.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\utils\\pick.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\withPropsOnChange.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\defaultProps.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\withProps.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\mapProps.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\setPropTypes.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\recompose\\src\\withState.ts"],"sourcesContent":["import { ComponentType } from 'react'\n\nexport const getDisplayName = (component: ComponentType<any> | string): string | undefined => {\n    if (typeof component === 'string') {\n        return component\n    }\n\n    if (!component) {\n        return undefined\n    }\n\n    return component.displayName || component.name || 'Component'\n}\n","import { ComponentType } from 'react'\n\nexport const setStatic =\n    (key: string, value: any): (<T extends ComponentType<any>>(component: T) => T) =>\n    BaseComponent => {\n        /* eslint-disable no-param-reassign */\n        // @ts-expect-error there's no way to type this\n        BaseComponent[key] = value\n        /* eslint-enable no-param-reassign */\n        return BaseComponent\n    }\n","import { ComponentType } from 'react'\nimport { setStatic } from './setStatic'\n\nexport const setDisplayName = (\n    displayName: string\n): (<T extends ComponentType<any>>(component: T) => T) => setStatic('displayName', displayName)\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule shallowEqual\n * @typechecks\n */\n\n/* eslint-disable no-self-compare */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: unknown, y: unknown): boolean {\n    // SameValue algorithm\n    if (x === y) {\n        // Steps 1-5, 7-10\n        // Steps 6.b-6.e: +0 != -0\n        // Added the nonzero y check to make Flow happy, but it is redundant\n        return x !== 0 || y !== 0 || 1 / x === 1 / y\n    }\n    // Step 6.a: NaN == NaN\n    return x !== x && y !== y\n}\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nexport function shallowEqual(\n    objA: Record<string, unknown>,\n    objB: Record<string, unknown>\n): boolean {\n    if (is(objA, objB)) {\n        return true\n    }\n\n    if (typeof objA !== 'object' || objA === null || typeof objB !== 'object' || objB === null) {\n        return false\n    }\n\n    const keysA = Object.keys(objA)\n    const keysB = Object.keys(objB)\n\n    if (keysA.length !== keysB.length) {\n        return false\n    }\n\n    // Test for A's keys different from B.\n    for (let i = 0; i < keysA.length; i++) {\n        if (!hasOwnProperty.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n            return false\n        }\n    }\n\n    return true\n}\n","import { ComponentType } from 'react'\nimport { getDisplayName } from './getDisplayName'\n\nexport const wrapDisplayName = (BaseComponent: ComponentType<any>, hocName: string): string =>\n    `${hocName}(${getDisplayName(BaseComponent)})`\n","import { Component, createFactory } from 'react'\nimport { setDisplayName } from './setDisplayName'\nimport { InferableComponentEnhancer, PredicateDiff } from './types'\nimport { wrapDisplayName } from './wrapDisplayName'\n\nexport const shouldUpdate =\n    <TProps extends Record<string, unknown>>(\n        test: PredicateDiff<TProps>\n        // eslint-disable-next-line @typescript-eslint/ban-types\n    ): InferableComponentEnhancer<{}> =>\n    (BaseComponent: any): any => {\n        const factory = createFactory(BaseComponent)\n        class ShouldUpdate extends Component {\n            shouldComponentUpdate(nextProps: any) {\n                // @ts-expect-error not type-able\n                return test(this.props, nextProps)\n            }\n\n            render() {\n                // @ts-expect-error not type-able\n                return factory(this.props)\n            }\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n            return setDisplayName(wrapDisplayName(BaseComponent, 'shouldUpdate'))(ShouldUpdate)\n        }\n        return ShouldUpdate\n    }\n","import { ComponentType } from 'react'\nimport { setDisplayName } from './setDisplayName'\nimport { shallowEqual } from './shallowEqual'\nimport { shouldUpdate } from './shouldUpdate'\nimport { wrapDisplayName } from './wrapDisplayName'\n\nexport const pure = <TProps>(component: ComponentType<TProps>): ComponentType<TProps> => {\n    const hoc = shouldUpdate((props, nextProps) => !shallowEqual(props, nextProps))\n\n    if (process.env.NODE_ENV !== 'production') {\n        return setDisplayName(wrapDisplayName(component, 'pure'))(hoc(component))\n    }\n\n    return hoc(component)\n}\n","import { ComponentClass, ComponentType } from 'react'\n\ninterface ComponentEnhancer<TInner, TOuter> {\n    (component: ComponentType<TInner>): ComponentClass<TOuter>\n}\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const compose = <TInner, TOuter>(...funcs: Function[]): ComponentEnhancer<TInner, TOuter> =>\n    funcs.reduce<ComponentEnhancer<TInner, TOuter>>(\n        (a, b) =>\n            (...args) =>\n                a(b(...args)),\n        arg => arg as any\n    ) as ComponentEnhancer<TInner, TOuter>\n","export const pick = (obj: Record<string, unknown>, keys: string[]) => {\n    const result: Record<string, unknown> = {}\n    for (let i = 0; i < keys.length; i++) {\n        const key = keys[i]\n        // eslint-disable-next-line no-prototype-builtins\n        if (obj.hasOwnProperty(key)) {\n            result[key] = obj[key]\n        }\n    }\n    return result\n}\n","import { Component, createFactory } from 'react'\nimport { polyfill } from 'react-lifecycles-compat'\nimport { setDisplayName } from './setDisplayName'\nimport { shallowEqual } from './shallowEqual'\nimport { InferableComponentEnhancerWithProps, Mapper, PredicateDiff } from './types'\nimport { pick } from './utils'\nimport { wrapDisplayName } from './wrapDisplayName'\n\nexport const withPropsOnChange =\n    <TInner, TOuter extends Record<string, unknown>>(\n        shouldMapOrKeys: string[] | PredicateDiff<TOuter>,\n        propsMapper: Mapper<TOuter, TInner>\n    ): InferableComponentEnhancerWithProps<TInner & TOuter, TOuter> =>\n    (BaseComponent: any): any => {\n        const factory = createFactory(BaseComponent)\n        const shouldMap =\n            typeof shouldMapOrKeys === 'function'\n                ? shouldMapOrKeys\n                : (props: TOuter, nextProps: TOuter) =>\n                      !shallowEqual(pick(props, shouldMapOrKeys), pick(nextProps, shouldMapOrKeys))\n\n        class WithPropsOnChange extends Component<TOuter> {\n            state = {\n                computedProps: propsMapper(this.props),\n                prevProps: this.props,\n            }\n\n            static getDerivedStateFromProps(\n                nextProps: TOuter,\n                prevState: WithPropsOnChange['state']\n            ) {\n                if (shouldMap(prevState.prevProps, nextProps)) {\n                    return {\n                        computedProps: propsMapper(nextProps),\n                        prevProps: nextProps,\n                    }\n                }\n\n                return {\n                    prevProps: nextProps,\n                }\n            }\n\n            render() {\n                // @ts-expect-error due to how factory is typed\n                return factory({\n                    ...this.props,\n                    ...this.state.computedProps,\n                })\n            }\n        }\n\n        polyfill(WithPropsOnChange)\n\n        if (process.env.NODE_ENV !== 'production') {\n            return setDisplayName(wrapDisplayName(BaseComponent, 'withPropsOnChange'))(\n                WithPropsOnChange\n            )\n        }\n\n        return WithPropsOnChange\n    }\n","import { createFactory } from 'react'\nimport { setDisplayName } from './setDisplayName'\nimport { DefaultingInferableComponentEnhancer } from './types'\nimport { wrapDisplayName } from './wrapDisplayName'\n\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport const defaultProps =\n    <T = {}>(props: T): DefaultingInferableComponentEnhancer<T> =>\n    (BaseComponent: any): any => {\n        const factory = createFactory(BaseComponent)\n        const DefaultProps = (ownerProps: any) => factory(ownerProps)\n        DefaultProps.defaultProps = props\n        if (process.env.NODE_ENV !== 'production') {\n            return setDisplayName(wrapDisplayName(BaseComponent, 'defaultProps'))(DefaultProps)\n        }\n        return DefaultProps\n    }\n","import { mapProps } from './mapProps'\nimport { setDisplayName } from './setDisplayName'\nimport { InferableComponentEnhancerWithProps, Mapper } from './types'\nimport { wrapDisplayName } from './wrapDisplayName'\n\nexport const withProps = <TInner, TOuter>(\n    createProps: TInner | Mapper<TOuter, TInner>\n): InferableComponentEnhancerWithProps<TInner & TOuter, TOuter> => {\n    const hoc = mapProps(props => ({\n        ...(props as any),\n        // eslint-disable-next-line @typescript-eslint/ban-types\n        ...(typeof createProps === 'function' ? (createProps as Function)(props) : createProps),\n    }))\n    if (process.env.NODE_ENV !== 'production') {\n        return ((BaseComponent: any) =>\n            setDisplayName(wrapDisplayName(BaseComponent, 'withProps'))(hoc(BaseComponent))) as any\n    }\n    return hoc as InferableComponentEnhancerWithProps<TInner & TOuter, TOuter>\n}\n","import { createFactory } from 'react'\nimport { setDisplayName } from './setDisplayName'\nimport { InferableComponentEnhancerWithProps, Mapper } from './types'\nimport { wrapDisplayName } from './wrapDisplayName'\n\nexport const mapProps =\n    <TInner, TOuter>(\n        propsMapper: Mapper<TOuter, TInner>\n    ): InferableComponentEnhancerWithProps<TInner, TOuter> =>\n    (BaseComponent: any): any => {\n        const factory = createFactory(BaseComponent)\n        const MapProps = (props: any) => factory(propsMapper(props))\n        if (process.env.NODE_ENV !== 'production') {\n            return setDisplayName(wrapDisplayName(BaseComponent, 'mapProps'))(MapProps)\n        }\n        return MapProps\n    }\n","import { ComponentType, ValidationMap } from 'react'\nimport { setStatic } from './setStatic'\n\nexport const setPropTypes = <P>(\n    propTypes: ValidationMap<P>\n): (<T extends ComponentType<P>>(component: T) => T) => setStatic('propTypes', propTypes)\n","import { createFactory, Component } from 'react'\nimport { setDisplayName } from './setDisplayName'\nimport { InferableComponentEnhancerWithProps, Mapper } from './types'\nimport { wrapDisplayName } from './wrapDisplayName'\n\ntype StateProps<TState, TStateName extends string, TStateUpdaterName extends string> = {\n    [stateName in TStateName]: TState\n} & { [stateUpdateName in TStateUpdaterName]: (state: TState) => TState }\n\nexport const withState =\n    <TOuter, TState, TStateName extends string, TStateUpdaterName extends string>(\n        stateName: TStateName,\n        stateUpdaterName: TStateUpdaterName,\n        initialState: TState | Mapper<TOuter, TState>\n    ): InferableComponentEnhancerWithProps<\n        StateProps<TState, TStateName, TStateUpdaterName>,\n        TOuter\n    > =>\n    (BaseComponent: any): any => {\n        const factory = createFactory(BaseComponent)\n        class WithState extends Component {\n            state = {\n                stateValue:\n                    typeof initialState === 'function'\n                        ? // eslint-disable-next-line @typescript-eslint/ban-types\n                          (initialState as Function)(this.props)\n                        : initialState,\n            }\n\n            updateStateValue = (updateFn: any, callback: any) =>\n                this.setState(\n                    ({ stateValue }: any) => ({\n                        stateValue:\n                            typeof updateFn === 'function' ? updateFn(stateValue) : updateFn,\n                    }),\n                    callback\n                )\n\n            render() {\n                // @ts-expect-error due to how factory is typed\n                return factory({\n                    ...this.props,\n                    [stateName]: this.state.stateValue,\n                    [stateUpdaterName]: this.updateStateValue,\n                })\n            }\n        }\n\n        if (process.env.NODE_ENV !== 'production') {\n            return setDisplayName(wrapDisplayName(BaseComponent, 'withState'))(WithState)\n        }\n        return WithState\n    }\n"]},"metadata":{},"sourceType":"module"}