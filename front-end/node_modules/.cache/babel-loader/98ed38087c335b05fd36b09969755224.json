{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { userActions } from \"../../slice/UserSlice\";\nimport { useDispatch } from \"react-redux/es/exports\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NaverLoginHandler = props => {\n  _s();\n\n  const {\n    loginType\n  } = props;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const CLIENT_ID = \"PVGrBZM8vqHq_92Vh6Wx\";\n  const CLIENT_SECRET = \"tSbysXbRL1\"; // 인가코드\n\n  const location = useLocation();\n  const CODE = location.search.split(\"=\")[1];\n  const STATE = location.search.split(\"=\")[2]; // 네이버로 토큰 발급 요청\n\n  const getNaverToken = () => {\n    axios.post(`/token/?grant_type=authorization_code&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&code=${CODE}&state=${STATE}`, {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\"\n      }\n    }, {\n      responseType: \"json\"\n    }).then(res => res.data).then(data => {\n      // 액세스 토큰으로 로그인 요청\n      if (data.access_token) {\n        axios.post(\"https://j7d109.p.ssafy.io/back/users/login\", {\n          accessToken: data.access_token,\n          loginType: \"N\"\n        }, {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        }).then(res => {\n          if (res.data.message === \"회원가입을 먼저 해주세요.\") {\n            // 회원가입을 위해 uid를 저장 후 이동\n            // loginType은 로컬 스토리지에 있음\n            dispatch(userActions.setUid(res.data.uid));\n            navigate(\"/\");\n          } else {\n            // jwt 토큰과 유저 이름을 저장 후 메인 페이지로 이동\n            dispatch(userActions.setJwt(res.data.jwt));\n            dispatch(userActions.setUserTeamname(res.data.userTeamname));\n            localStorage.removeItem(\"loginType\");\n            localStorage.setItem(\"jwt\", res.data.jwt);\n            navigate(\"/main\");\n          }\n        });\n      } else {\n        navigate(\"/\");\n      }\n    });\n  }; // 취소시 로직\n\n\n  let error = new URL(window.location.href).searchParams.get(\"error_description\");\n  useEffect(() => {\n    if (!CODE) return;\n\n    if (loginType === \"N\") {\n      getNaverToken();\n    }\n\n    if (error === \"Canceled By User\") {\n      navigate(\"/\");\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(NaverLoginHandler, \"HReNSOYK3/ZdS3BkR1y0pyqHvQA=\", false, function () {\n  return [useNavigate, useDispatch, useLocation];\n});\n\n_c = NaverLoginHandler;\nexport default NaverLoginHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"NaverLoginHandler\");","map":{"version":3,"names":["useEffect","useLocation","useNavigate","axios","userActions","useDispatch","NaverLoginHandler","props","loginType","navigate","dispatch","CLIENT_ID","CLIENT_SECRET","location","CODE","search","split","STATE","getNaverToken","post","headers","responseType","then","res","data","access_token","accessToken","Accept","message","setUid","uid","setJwt","jwt","setUserTeamname","userTeamname","localStorage","removeItem","setItem","error","URL","window","href","searchParams","get"],"sources":["C:/Users/multicampus/Desktop/projects/theground/front-end/src/landing/components/NaverLoginHandler.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { userActions } from \"../../slice/UserSlice\";\r\nimport { useDispatch } from \"react-redux/es/exports\";\r\n\r\nconst NaverLoginHandler = (props) => {\r\n  const { loginType } = props;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const CLIENT_ID = \"PVGrBZM8vqHq_92Vh6Wx\";\r\n  const CLIENT_SECRET = \"tSbysXbRL1\";\r\n\r\n  // 인가코드\r\n  const location = useLocation();\r\n  const CODE = location.search.split(\"=\")[1];\r\n  const STATE = location.search.split(\"=\")[2];\r\n\r\n  // 네이버로 토큰 발급 요청\r\n  const getNaverToken = () => {\r\n    axios\r\n      .post(\r\n        `/token/?grant_type=authorization_code&client_id=${CLIENT_ID}&client_secret=${CLIENT_SECRET}&code=${CODE}&state=${STATE}`,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          },\r\n        },\r\n        {\r\n          responseType: \"json\",\r\n        }\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        // 액세스 토큰으로 로그인 요청\r\n        if (data.access_token) {\r\n          axios\r\n            .post(\r\n              \"https://j7d109.p.ssafy.io/back/users/login\",\r\n              {\r\n                accessToken: data.access_token,\r\n                loginType: \"N\",\r\n              },\r\n              {\r\n                headers: {\r\n                  \"Content-type\": \"application/json\",\r\n                  Accept: \"application/json\",\r\n                },\r\n              }\r\n            )\r\n            .then((res) => {\r\n              if (res.data.message === \"회원가입을 먼저 해주세요.\") {\r\n                // 회원가입을 위해 uid를 저장 후 이동\r\n                // loginType은 로컬 스토리지에 있음\r\n                dispatch(userActions.setUid(res.data.uid));\r\n                navigate(\"/\");\r\n              } else {\r\n                // jwt 토큰과 유저 이름을 저장 후 메인 페이지로 이동\r\n                dispatch(userActions.setJwt(res.data.jwt));\r\n                dispatch(userActions.setUserTeamname(res.data.userTeamname));\r\n                localStorage.removeItem(\"loginType\");\r\n                localStorage.setItem(\"jwt\", res.data.jwt);\r\n                navigate(\"/main\");\r\n              }\r\n            });\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  // 취소시 로직\r\n  let error = new URL(window.location.href).searchParams.get(\r\n    \"error_description\"\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!CODE) return;\r\n    if (loginType === \"N\") {\r\n      getNaverToken();\r\n    }\r\n    if (error === \"Canceled By User\") {\r\n      navigate(\"/\");\r\n    }\r\n  }, []);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default NaverLoginHandler;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}