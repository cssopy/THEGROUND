{"ast":null,"code":"export const strictEquality = (a, b) => a === b;\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\n\nexport function areCoordsEqual(offsetA, offsetB) {\n  if (!offsetA && !offsetB) {\n    return true;\n  } else if (!offsetA || !offsetB) {\n    return false;\n  } else {\n    return offsetA.x === offsetB.x && offsetA.y === offsetB.y;\n  }\n}\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\n\nexport function areArraysEqual(a, b) {\n  let isEqual = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : strictEquality;\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (let i = 0; i < a.length; ++i) {\n    if (!isEqual(a[i], b[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}","map":{"version":3,"mappings":"AAGA,OAAO,MAAMA,cAAc,GAAG,CAAIC,CAAJ,EAAUC,CAAV,KAA4BD,CAAC,KAAKC,CAAzD;AAEP;;;;;;AAKA,OAAO,SAASC,cAAT,CACNC,OADM,EAENC,OAFM,EAGI;EACV,IAAI,CAACD,OAAD,IAAY,CAACC,OAAjB,EAA0B;IACzB,OAAO,IAAP;EACA,CAFD,MAEO,IAAI,CAACD,OAAD,IAAY,CAACC,OAAjB,EAA0B;IAChC,OAAO,KAAP;EACA,CAFM,MAEA;IACN,OAAOD,OAAO,CAACE,CAARF,KAAcC,OAAO,CAACC,CAAtBF,IAA2BA,OAAO,CAACG,CAARH,KAAcC,OAAO,CAACE,CAAxD;EACA;AACD;AAED;;;;;;AAKA,OAAO,SAASC,cAAT,CACNP,CADM,EAENC,CAFM,EAII;EAAA,IADVO,OACU,uEADkBT,cAClB;;EACV,IAAIC,CAAC,CAACS,MAAFT,KAAaC,CAAC,CAACQ,MAAnB,EAA2B;IAC1B,OAAO,KAAP;EACA;;EACD,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,CAAC,CAACS,MAAtB,EAA8B,EAAEC,CAAhC,EAAmC;IAClC,IAAI,CAACF,OAAO,CAACR,CAAC,CAACU,CAAD,CAAF,EAAYT,CAAC,CAACS,CAAD,CAAb,CAAZ,EAAoC;MACnC,OAAO,KAAP;IACA;EACD;;EACD,OAAO,IAAP;AACA","names":["strictEquality","a","b","areCoordsEqual","offsetA","offsetB","x","y","areArraysEqual","isEqual","length","i"],"sources":["C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\dnd-core\\src\\utils\\equality.ts"],"sourcesContent":["import type { XYCoord } from '../interfaces.js'\n\nexport type EqualityCheck<T> = (a: T, b: T) => boolean\nexport const strictEquality = <T>(a: T, b: T): boolean => a === b\n\n/**\n * Determine if two cartesian coordinate offsets are equal\n * @param offsetA\n * @param offsetB\n */\nexport function areCoordsEqual(\n\toffsetA: XYCoord | null | undefined,\n\toffsetB: XYCoord | null | undefined,\n): boolean {\n\tif (!offsetA && !offsetB) {\n\t\treturn true\n\t} else if (!offsetA || !offsetB) {\n\t\treturn false\n\t} else {\n\t\treturn offsetA.x === offsetB.x && offsetA.y === offsetB.y\n\t}\n}\n\n/**\n * Determines if two arrays of items are equal\n * @param a The first array of items\n * @param b The second array of items\n */\nexport function areArraysEqual<T>(\n\ta: T[],\n\tb: T[],\n\tisEqual: EqualityCheck<T> = strictEquality,\n): boolean {\n\tif (a.length !== b.length) {\n\t\treturn false\n\t}\n\tfor (let i = 0; i < a.length; ++i) {\n\t\tif (!isEqual(a[i] as T, b[i] as T)) {\n\t\t\treturn false\n\t\t}\n\t}\n\treturn true\n}\n"]},"metadata":{},"sourceType":"module"}