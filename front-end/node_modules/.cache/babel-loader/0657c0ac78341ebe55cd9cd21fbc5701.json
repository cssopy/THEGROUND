{"ast":null,"code":"export function matchesType(targetType, draggedItemType) {\n  if (draggedItemType === null) {\n    return targetType === null;\n  }\n\n  return Array.isArray(targetType) ? targetType.some(t => t === draggedItemType) : targetType === draggedItemType;\n}","map":{"version":3,"mappings":"AAEA,OAAO,SAASA,WAAT,CACNC,UADM,EAENC,eAFM,EAGI;EACV,IAAIA,eAAe,KAAK,IAAxB,EAA8B;IAC7B,OAAOD,UAAU,KAAK,IAAtB;EACA;;EACD,OAAOE,KAAK,CAACC,OAAND,CAAcF,UAAdE,IACJF,UAAW,CAAkBI,IAA7B,CAAmCC,CAAD,IAAOA,CAAC,KAAKJ,eAA/C,CADIC,GAEJF,UAAU,KAAKC,eAFlB;AAGA","names":["matchesType","targetType","draggedItemType","Array","isArray","some","t"],"sources":["C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\dnd-core\\src\\utils\\matchesType.ts"],"sourcesContent":["import type { Identifier } from '../interfaces.js'\n\nexport function matchesType(\n\ttargetType: Identifier | Identifier[] | null,\n\tdraggedItemType: Identifier | null,\n): boolean {\n\tif (draggedItemType === null) {\n\t\treturn targetType === null\n\t}\n\treturn Array.isArray(targetType)\n\t\t? (targetType as Identifier[]).some((t) => t === draggedItemType)\n\t\t: targetType === draggedItemType\n}\n"]},"metadata":{},"sourceType":"module"}