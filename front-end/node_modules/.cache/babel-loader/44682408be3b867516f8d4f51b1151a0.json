{"ast":null,"code":"// import { useEffect } from \"react\";\n// import { useNavigate } from \"react-router-dom\";\n// import axios from \"axios\";\n// import { userActions } from \"../../slice/UserSlice\";\n// import { useDispatch } from \"react-redux/es/exports\";\n// const KakaoLoginHandler = (props) => {\n//   const { loginType } = props;\n//   const navigate = useNavigate();\n//   const dispatch = useDispatch();\n//   const REST_API_KEY = \"1ae04a78365d2a5f1e2e1d4ee529fe84\";\n//   const REDIRECT_URI = \"https://j7d109.p.ssafy.io\";\n//   // const REDIRECT_URI = \"http://localhost:3000\";\n//   // 인가코드\n//   let CODE = new URL(window.location.href).searchParams.get(\"code\");\n//   // 카카오로 액세스 토큰 발급 요청\n//   const getKakaoToken = () => {\n//     axios\n//       .post(\n//         `https://kauth.kakao.com/oauth/token?grant_type=authorization_code&client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&code=${CODE}`,\n//         {\n//           headers: {\n//             \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\n//           },\n//         },\n//         {\n//           responseType: \"json\",\n//         }\n//       )\n//       .then((res) => res.data)\n//       .then((data) => {\n//         // 액세스 토큰으로 로그인 요청\n//         if (data.access_token) {\n//           axios\n//             .post(\n//               \"https://j7d109.p.ssafy.io/back/users/login\",\n//               {\n//                 accessToken: data.access_token,\n//                 loginType: \"K\",\n//               },\n//               {\n//                 headers: {\n//                   \"Content-type\": \"application/json\",\n//                   Accept: \"application/json\",\n//                 },\n//               }\n//             )\n//             .then((res) => {\n//               if (res.data.message === \"회원가입을 먼저 해주세요.\") {\n//                 // 회원가입을 위해 uid를 저장 후 이동\n//                 // loginType은 로컬 스토리지에 있음\n//                 dispatch(userActions.setUid(res.data.uid));\n//                 navigate(\"/\");\n//               } else {\n//                 // jwt 토큰과 유저 이름을 저장 후 메인 페이지로 이동\n//                 dispatch(userActions.setJwt(res.data.jwt));\n//                 dispatch(userActions.setUserTeamname(res.data.userTeamname));\n//                 localStorage.removeItem(\"loginType\");\n//                 localStorage.setItem(\"jwt\", res.data.jwt);\n//                 navigate(\"/main\");\n//               }\n//             });\n//         } else {\n//           navigate(\"/\");\n//         }\n//       });\n//   };\n//   useEffect(() => {\n//     if (!CODE) return;\n//     if (loginType === \"K\") {\n//       getKakaoToken();\n//     }\n//   }, []);\n//   return <></>;\n// };\n// export default KakaoLoginHandler;","map":{"version":3,"names":[],"sources":["C:/Users/multicampus/Desktop/projects/theground/front-end/src/landing/components/KakaoLoginHandler.js"],"sourcesContent":["// import { useEffect } from \"react\";\r\n// import { useNavigate } from \"react-router-dom\";\r\n// import axios from \"axios\";\r\n// import { userActions } from \"../../slice/UserSlice\";\r\n// import { useDispatch } from \"react-redux/es/exports\";\r\n\r\n// const KakaoLoginHandler = (props) => {\r\n//   const { loginType } = props;\r\n//   const navigate = useNavigate();\r\n//   const dispatch = useDispatch();\r\n\r\n//   const REST_API_KEY = \"1ae04a78365d2a5f1e2e1d4ee529fe84\";\r\n//   const REDIRECT_URI = \"https://j7d109.p.ssafy.io\";\r\n//   // const REDIRECT_URI = \"http://localhost:3000\";\r\n\r\n//   // 인가코드\r\n//   let CODE = new URL(window.location.href).searchParams.get(\"code\");\r\n\r\n//   // 카카오로 액세스 토큰 발급 요청\r\n//   const getKakaoToken = () => {\r\n//     axios\r\n//       .post(\r\n//         `https://kauth.kakao.com/oauth/token?grant_type=authorization_code&client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&code=${CODE}`,\r\n//         {\r\n//           headers: {\r\n//             \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n//           },\r\n//         },\r\n//         {\r\n//           responseType: \"json\",\r\n//         }\r\n//       )\r\n//       .then((res) => res.data)\r\n//       .then((data) => {\r\n//         // 액세스 토큰으로 로그인 요청\r\n//         if (data.access_token) {\r\n//           axios\r\n//             .post(\r\n//               \"https://j7d109.p.ssafy.io/back/users/login\",\r\n//               {\r\n//                 accessToken: data.access_token,\r\n//                 loginType: \"K\",\r\n//               },\r\n//               {\r\n//                 headers: {\r\n//                   \"Content-type\": \"application/json\",\r\n//                   Accept: \"application/json\",\r\n//                 },\r\n//               }\r\n//             )\r\n//             .then((res) => {\r\n//               if (res.data.message === \"회원가입을 먼저 해주세요.\") {\r\n//                 // 회원가입을 위해 uid를 저장 후 이동\r\n//                 // loginType은 로컬 스토리지에 있음\r\n//                 dispatch(userActions.setUid(res.data.uid));\r\n//                 navigate(\"/\");\r\n//               } else {\r\n//                 // jwt 토큰과 유저 이름을 저장 후 메인 페이지로 이동\r\n//                 dispatch(userActions.setJwt(res.data.jwt));\r\n//                 dispatch(userActions.setUserTeamname(res.data.userTeamname));\r\n//                 localStorage.removeItem(\"loginType\");\r\n//                 localStorage.setItem(\"jwt\", res.data.jwt);\r\n//                 navigate(\"/main\");\r\n//               }\r\n//             });\r\n//         } else {\r\n//           navigate(\"/\");\r\n//         }\r\n//       });\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if (!CODE) return;\r\n//     if (loginType === \"K\") {\r\n//       getKakaoToken();\r\n//     }\r\n//   }, []);\r\n\r\n//   return <></>;\r\n// };\r\n\r\n// export default KakaoLoginHandler;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA"},"metadata":{},"sourceType":"module"}