{"ast":null,"code":"import { jsx as t, jsxs as e } from \"react/jsx-runtime\";\nimport { scaleLinear as i } from \"d3-scale\";\nimport { getValueFormatter as n, useTheme as o, degreesToRadians as r } from \"@nivo/core\";\nimport { computeContinuousColorScaleColorStops as l } from \"@nivo/colors\";\nimport * as a from \"react\";\nimport { Fragment as c, useState as s, useCallback as d, useMemo as h } from \"react\";\nimport g from \"prop-types\";\n\nvar m = function (e) {\n  var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n  return t(\"circle\", {\n    r: o / 2,\n    cx: i + o / 2,\n    cy: n + o / 2,\n    fill: r,\n    opacity: a,\n    strokeWidth: s,\n    stroke: void 0 === d ? \"transparent\" : d,\n    style: {\n      pointerEvents: \"none\"\n    }\n  });\n},\n    f = function (e) {\n  var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n  return t(\"g\", {\n    transform: \"translate(\" + i + \",\" + n + \")\",\n    children: t(\"path\", {\n      d: \"\\n                    M\" + o / 2 + \" 0\\n                    L\" + .8 * o + \" \" + o / 2 + \"\\n                    L\" + o / 2 + \" \" + o + \"\\n                    L\" + .2 * o + \" \" + o / 2 + \"\\n                    L\" + o / 2 + \" 0\\n                \",\n      fill: r,\n      opacity: a,\n      strokeWidth: s,\n      stroke: void 0 === d ? \"transparent\" : d,\n      style: {\n        pointerEvents: \"none\"\n      }\n    })\n  });\n},\n    u = function (e) {\n  var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n  return t(\"rect\", {\n    x: i,\n    y: n,\n    fill: r,\n    opacity: a,\n    strokeWidth: s,\n    stroke: void 0 === d ? \"transparent\" : d,\n    width: o,\n    height: o,\n    style: {\n      pointerEvents: \"none\"\n    }\n  });\n},\n    v = function (e) {\n  var i = e.x,\n      n = e.y,\n      o = e.size,\n      r = e.fill,\n      l = e.opacity,\n      a = void 0 === l ? 1 : l,\n      c = e.borderWidth,\n      s = void 0 === c ? 0 : c,\n      d = e.borderColor;\n  return t(\"g\", {\n    transform: \"translate(\" + i + \",\" + n + \")\",\n    children: t(\"path\", {\n      d: \"\\n                M\" + o / 2 + \" 0\\n                L\" + o + \" \" + o + \"\\n                L0 \" + o + \"\\n                L\" + o / 2 + \" 0\\n            \",\n      fill: r,\n      opacity: a,\n      strokeWidth: s,\n      stroke: void 0 === d ? \"transparent\" : d,\n      style: {\n        pointerEvents: \"none\"\n      }\n    })\n  });\n};\n\nfunction p() {\n  return p = Object.assign || function (t) {\n    for (var e = 1; e < arguments.length; e++) {\n      var i = arguments[e];\n\n      for (var n in i) Object.prototype.hasOwnProperty.call(i, n) && (t[n] = i[n]);\n    }\n\n    return t;\n  }, p.apply(this, arguments);\n}\n\nvar y = {\n  length: 200,\n  thickness: 16,\n  direction: \"row\",\n  tickPosition: \"after\",\n  tickSize: 4,\n  tickSpacing: 3,\n  tickOverlap: !1,\n  tickFormat: function (t) {\n    return \"\" + t;\n  },\n  titleAlign: \"start\",\n  titleOffset: 4\n},\n    b = {\n  top: 0,\n  right: 0,\n  bottom: 0,\n  left: 0\n},\n    k = function (t) {\n  var e,\n      i = t.direction,\n      n = t.itemsSpacing,\n      o = t.padding,\n      r = t.itemCount,\n      l = t.itemWidth,\n      a = t.itemHeight;\n  if (\"number\" != typeof o && (\"object\" != typeof (e = o) || Array.isArray(e) || null === e)) throw new Error(\"Invalid property padding, must be one of: number, object\");\n  var c = \"number\" == typeof o ? {\n    top: o,\n    right: o,\n    bottom: o,\n    left: o\n  } : p({}, b, o),\n      s = c.left + c.right,\n      d = c.top + c.bottom,\n      h = l + s,\n      g = a + d,\n      m = (r - 1) * n;\n  return \"row\" === i ? h = l * r + m + s : \"column\" === i && (g = a * r + m + d), {\n    width: h,\n    height: g,\n    padding: c\n  };\n},\n    x = function (t) {\n  var e = t.anchor,\n      i = t.translateX,\n      n = t.translateY,\n      o = t.containerWidth,\n      r = t.containerHeight,\n      l = t.width,\n      a = t.height,\n      c = i,\n      s = n;\n\n  switch (e) {\n    case \"top\":\n      c += (o - l) / 2;\n      break;\n\n    case \"top-right\":\n      c += o - l;\n      break;\n\n    case \"right\":\n      c += o - l, s += (r - a) / 2;\n      break;\n\n    case \"bottom-right\":\n      c += o - l, s += r - a;\n      break;\n\n    case \"bottom\":\n      c += (o - l) / 2, s += r - a;\n      break;\n\n    case \"bottom-left\":\n      s += r - a;\n      break;\n\n    case \"left\":\n      s += (r - a) / 2;\n      break;\n\n    case \"center\":\n      c += (o - l) / 2, s += (r - a) / 2;\n  }\n\n  return {\n    x: c,\n    y: s\n  };\n},\n    S = function (t) {\n  var e,\n      i,\n      n,\n      o,\n      r,\n      l,\n      a = t.direction,\n      c = t.justify,\n      s = t.symbolSize,\n      d = t.symbolSpacing,\n      h = t.width,\n      g = t.height;\n\n  switch (a) {\n    case \"left-to-right\":\n      e = 0, i = (g - s) / 2, o = g / 2, l = \"central\", c ? (n = h, r = \"end\") : (n = s + d, r = \"start\");\n      break;\n\n    case \"right-to-left\":\n      e = h - s, i = (g - s) / 2, o = g / 2, l = \"central\", c ? (n = 0, r = \"start\") : (n = h - s - d, r = \"end\");\n      break;\n\n    case \"top-to-bottom\":\n      e = (h - s) / 2, i = 0, n = h / 2, r = \"middle\", c ? (o = g, l = \"alphabetic\") : (o = s + d, l = \"text-before-edge\");\n      break;\n\n    case \"bottom-to-top\":\n      e = (h - s) / 2, i = g - s, n = h / 2, r = \"middle\", c ? (o = 0, l = \"text-before-edge\") : (o = g - s - d, l = \"alphabetic\");\n  }\n\n  return {\n    symbolX: e,\n    symbolY: i,\n    labelX: n,\n    labelY: o,\n    labelAnchor: r,\n    labelAlignment: l\n  };\n},\n    A = function (t) {\n  var e,\n      o = t.scale,\n      r = t.ticks,\n      a = t.length,\n      c = void 0 === a ? y.length : a,\n      s = t.thickness,\n      d = void 0 === s ? y.thickness : s,\n      h = t.direction,\n      g = void 0 === h ? y.direction : h,\n      m = t.tickPosition,\n      f = void 0 === m ? y.tickPosition : m,\n      u = t.tickSize,\n      v = void 0 === u ? y.tickSize : u,\n      p = t.tickSpacing,\n      b = void 0 === p ? y.tickSpacing : p,\n      k = t.tickOverlap,\n      x = void 0 === k ? y.tickOverlap : k,\n      S = t.tickFormat,\n      A = void 0 === S ? y.tickFormat : S,\n      W = t.title,\n      z = t.titleAlign,\n      C = void 0 === z ? y.titleAlign : z,\n      O = t.titleOffset,\n      B = void 0 === O ? y.titleOffset : O,\n      w = \"column\" === g ? [].concat(o.domain()).reverse() : o.domain(),\n      X = i().domain(w);\n  2 === w.length ? X.range([0, c]) : 3 === w.length && X.range([0, c / 2, c]), e = \"thresholds\" in o ? [w[0]].concat(o.thresholds(), [w[1]]) : Array.isArray(r) ? r : o.ticks(r);\n  var Y,\n      H,\n      E,\n      j,\n      T,\n      L,\n      M = l(o, 32),\n      F = n(A),\n      P = [],\n      R = 0,\n      q = 0;\n\n  if (\"row\" === g) {\n    var V, D, G;\n    Y = c, H = d, q = 1;\n    var I;\n    T = 0, E = \"start\" === C ? 0 : \"middle\" === C ? c / 2 : c, \"before\" === f ? (V = -v, D = x ? d : 0, G = -v - b, I = \"alphabetic\", j = d + B, L = \"hanging\") : (V = x ? 0 : d, G = (D = d + v) + b, I = \"hanging\", j = -B, L = \"alphabetic\"), e.forEach(function (t) {\n      var e = X(t);\n      P.push({\n        x1: e,\n        y1: V,\n        x2: e,\n        y2: D,\n        text: F(t),\n        textX: e,\n        textY: G,\n        textHorizontalAlign: \"middle\",\n        textVerticalAlign: I\n      });\n    });\n  } else {\n    var N, _, J, K;\n\n    Y = d, H = c, R = 1;\n    T = -90, j = \"start\" === C ? c : \"middle\" === C ? c / 2 : 0, \"before\" === f ? (_ = x ? d : 0, J = (N = -v) - b, K = \"end\", E = d + B, L = \"hanging\") : (N = x ? 0 : d, J = (_ = d + v) + b, K = \"start\", E = -B, L = \"alphabetic\"), e.forEach(function (t) {\n      var e = X(t);\n      P.push({\n        x1: N,\n        y1: e,\n        x2: _,\n        y2: e,\n        text: F(t),\n        textX: J,\n        textY: e,\n        textHorizontalAlign: K,\n        textVerticalAlign: \"central\"\n      });\n    });\n  }\n\n  return {\n    width: Y,\n    height: H,\n    gradientX1: 0,\n    gradientY1: R,\n    gradientX2: q,\n    gradientY2: 0,\n    colorStops: M,\n    ticks: P,\n    titleText: W,\n    titleX: E,\n    titleY: j,\n    titleRotation: T,\n    titleHorizontalAlign: C,\n    titleVerticalAlign: L\n  };\n},\n    W = function (i) {\n  var n = i.scale,\n      r = i.ticks,\n      l = i.length,\n      a = void 0 === l ? y.length : l,\n      s = i.thickness,\n      d = void 0 === s ? y.thickness : s,\n      h = i.direction,\n      g = void 0 === h ? y.direction : h,\n      m = i.tickPosition,\n      f = void 0 === m ? y.tickPosition : m,\n      u = i.tickSize,\n      v = void 0 === u ? y.tickSize : u,\n      b = i.tickSpacing,\n      k = void 0 === b ? y.tickSpacing : b,\n      x = i.tickOverlap,\n      S = void 0 === x ? y.tickOverlap : x,\n      W = i.tickFormat,\n      z = void 0 === W ? y.tickFormat : W,\n      C = i.title,\n      O = i.titleAlign,\n      B = void 0 === O ? y.titleAlign : O,\n      w = i.titleOffset,\n      X = A({\n    scale: n,\n    ticks: r,\n    length: a,\n    thickness: d,\n    direction: g,\n    tickPosition: f,\n    tickSize: v,\n    tickSpacing: k,\n    tickOverlap: S,\n    tickFormat: z,\n    title: C,\n    titleAlign: B,\n    titleOffset: void 0 === w ? y.titleOffset : w\n  }),\n      Y = X.width,\n      H = X.height,\n      E = X.gradientX1,\n      j = X.gradientY1,\n      T = X.gradientX2,\n      L = X.gradientY2,\n      M = X.ticks,\n      F = X.colorStops,\n      P = X.titleText,\n      R = X.titleX,\n      q = X.titleY,\n      V = X.titleRotation,\n      D = X.titleVerticalAlign,\n      G = X.titleHorizontalAlign,\n      I = o(),\n      N = \"ContinuousColorsLegendSvgGradient.\" + g + \".\" + F.map(function (t) {\n    return t.offset;\n  }).join(\"_\");\n  return e(\"g\", {\n    children: [t(\"defs\", {\n      children: t(\"linearGradient\", {\n        id: N,\n        x1: E,\n        y1: j,\n        x2: T,\n        y2: L,\n        children: F.map(function (e) {\n          return t(\"stop\", p({}, e));\n        })\n      })\n    }), P && t(\"text\", {\n      transform: \"translate(\" + R + \", \" + q + \") rotate(\" + V + \")\",\n      textAnchor: G,\n      dominantBaseline: D,\n      style: I.legends.title.text,\n      children: P\n    }), t(\"rect\", {\n      width: Y,\n      height: H,\n      fill: \"url(#\" + N\n    }), M.map(function (i, n) {\n      return e(c, {\n        children: [t(\"line\", {\n          x1: i.x1,\n          y1: i.y1,\n          x2: i.x2,\n          y2: i.y2,\n          style: I.legends.ticks.line\n        }), t(\"text\", {\n          x: i.textX,\n          y: i.textY,\n          textAnchor: i.textHorizontalAlign,\n          dominantBaseline: i.textVerticalAlign,\n          style: I.legends.ticks.text,\n          children: i.text\n        })]\n      }, n);\n    })]\n  });\n},\n    z = [\"containerWidth\", \"containerHeight\", \"anchor\", \"translateX\", \"translateY\", \"length\", \"thickness\", \"direction\"],\n    C = function (e) {\n  var i,\n      n,\n      o = e.containerWidth,\n      r = e.containerHeight,\n      l = e.anchor,\n      a = e.translateX,\n      c = void 0 === a ? 0 : a,\n      s = e.translateY,\n      d = void 0 === s ? 0 : s,\n      h = e.length,\n      g = void 0 === h ? y.length : h,\n      m = e.thickness,\n      f = void 0 === m ? y.thickness : m,\n      u = e.direction,\n      v = void 0 === u ? y.direction : u,\n      b = function (t, e) {\n    if (null == t) return {};\n    var i,\n        n,\n        o = {},\n        r = Object.keys(t);\n\n    for (n = 0; n < r.length; n++) i = r[n], e.indexOf(i) >= 0 || (o[i] = t[i]);\n\n    return o;\n  }(e, z);\n\n  \"row\" === v ? (i = g, n = f) : (i = f, n = g);\n  var k = x({\n    anchor: l,\n    translateX: c,\n    translateY: d,\n    containerWidth: o,\n    containerHeight: r,\n    width: i,\n    height: n\n  }),\n      S = k.x,\n      A = k.y;\n  return t(\"g\", {\n    transform: \"translate(\" + S + \", \" + A + \")\",\n    children: t(W, p({\n      length: g,\n      thickness: f,\n      direction: v\n    }, b))\n  });\n},\n    O = {\n  circle: m,\n  diamond: f,\n  square: u,\n  triangle: v\n},\n    B = function (i) {\n  var n,\n      r,\n      l,\n      c,\n      h,\n      g,\n      m,\n      f,\n      u,\n      v,\n      y,\n      b = i.x,\n      k = i.y,\n      x = i.width,\n      A = i.height,\n      W = i.data,\n      z = i.direction,\n      C = void 0 === z ? \"left-to-right\" : z,\n      B = i.justify,\n      w = void 0 !== B && B,\n      X = i.textColor,\n      Y = i.background,\n      H = void 0 === Y ? \"transparent\" : Y,\n      E = i.opacity,\n      j = void 0 === E ? 1 : E,\n      T = i.symbolShape,\n      L = void 0 === T ? \"square\" : T,\n      M = i.symbolSize,\n      F = void 0 === M ? 16 : M,\n      P = i.symbolSpacing,\n      R = void 0 === P ? 8 : P,\n      q = i.symbolBorderWidth,\n      V = void 0 === q ? 0 : q,\n      D = i.symbolBorderColor,\n      G = void 0 === D ? \"transparent\" : D,\n      I = i.onClick,\n      N = i.onMouseEnter,\n      _ = i.onMouseLeave,\n      J = i.toggleSerie,\n      K = i.effects,\n      Q = s({}),\n      U = Q[0],\n      Z = Q[1],\n      $ = o(),\n      tt = d(function (t) {\n    if (K) {\n      var e = K.filter(function (t) {\n        return \"hover\" === t.on;\n      }).reduce(function (t, e) {\n        return p({}, t, e.style);\n      }, {});\n      Z(e);\n    }\n\n    null == N || N(W, t);\n  }, [N, W, K]),\n      et = d(function (t) {\n    if (K) {\n      var e = K.filter(function (t) {\n        return \"hover\" !== t.on;\n      }).reduce(function (t, e) {\n        return p({}, t, e.style);\n      }, {});\n      Z(e);\n    }\n\n    null == _ || _(W, t);\n  }, [_, W, K]),\n      it = S({\n    direction: C,\n    justify: w,\n    symbolSize: null != (n = U.symbolSize) ? n : F,\n    symbolSpacing: R,\n    width: x,\n    height: A\n  }),\n      nt = it.symbolX,\n      ot = it.symbolY,\n      rt = it.labelX,\n      lt = it.labelY,\n      at = it.labelAnchor,\n      ct = it.labelAlignment,\n      st = [I, N, _, J].some(function (t) {\n    return void 0 !== t;\n  }),\n      dt = \"function\" == typeof L ? L : O[L];\n  return e(\"g\", {\n    transform: \"translate(\" + b + \",\" + k + \")\",\n    style: {\n      opacity: null != (r = U.itemOpacity) ? r : j\n    },\n    children: [t(\"rect\", {\n      width: x,\n      height: A,\n      fill: null != (l = U.itemBackground) ? l : H,\n      style: {\n        cursor: st ? \"pointer\" : \"auto\"\n      },\n      onClick: function (t) {\n        null == I || I(W, t), null == J || J(W.id);\n      },\n      onMouseEnter: tt,\n      onMouseLeave: et\n    }), a.createElement(dt, p({\n      id: W.id,\n      x: nt,\n      y: ot,\n      size: null != (c = U.symbolSize) ? c : F,\n      fill: null != (h = null != (g = W.fill) ? g : W.color) ? h : \"black\",\n      borderWidth: null != (m = U.symbolBorderWidth) ? m : V,\n      borderColor: null != (f = U.symbolBorderColor) ? f : G\n    }, W.hidden ? $.legends.hidden.symbol : void 0)), t(\"text\", {\n      textAnchor: at,\n      style: p({}, $.legends.text, {\n        fill: null != (u = null != (v = null != (y = U.itemTextColor) ? y : X) ? v : $.legends.text.fill) ? u : \"black\",\n        dominantBaseline: ct,\n        pointerEvents: \"none\",\n        userSelect: \"none\"\n      }, W.hidden ? $.legends.hidden.text : void 0),\n      x: rt,\n      y: lt,\n      children: W.label\n    })]\n  });\n},\n    w = function (e) {\n  var i = e.data,\n      n = e.x,\n      o = e.y,\n      r = e.direction,\n      l = e.padding,\n      a = void 0 === l ? 0 : l,\n      c = e.justify,\n      s = e.effects,\n      d = e.itemWidth,\n      h = e.itemHeight,\n      g = e.itemDirection,\n      m = void 0 === g ? \"left-to-right\" : g,\n      f = e.itemsSpacing,\n      u = void 0 === f ? 0 : f,\n      v = e.itemTextColor,\n      p = e.itemBackground,\n      y = void 0 === p ? \"transparent\" : p,\n      b = e.itemOpacity,\n      x = void 0 === b ? 1 : b,\n      S = e.symbolShape,\n      A = e.symbolSize,\n      W = e.symbolSpacing,\n      z = e.symbolBorderWidth,\n      C = e.symbolBorderColor,\n      O = e.onClick,\n      w = e.onMouseEnter,\n      X = e.onMouseLeave,\n      Y = e.toggleSerie,\n      H = k({\n    itemCount: i.length,\n    itemWidth: d,\n    itemHeight: h,\n    itemsSpacing: u,\n    direction: r,\n    padding: a\n  }).padding,\n      E = \"row\" === r ? d + u : 0,\n      j = \"column\" === r ? h + u : 0;\n  return t(\"g\", {\n    transform: \"translate(\" + n + \",\" + o + \")\",\n    children: i.map(function (e, i) {\n      return t(B, {\n        data: e,\n        x: i * E + H.left,\n        y: i * j + H.top,\n        width: d,\n        height: h,\n        direction: m,\n        justify: c,\n        effects: s,\n        textColor: v,\n        background: y,\n        opacity: x,\n        symbolShape: S,\n        symbolSize: A,\n        symbolSpacing: W,\n        symbolBorderWidth: z,\n        symbolBorderColor: C,\n        onClick: O,\n        onMouseEnter: w,\n        onMouseLeave: X,\n        toggleSerie: Y\n      }, i);\n    })\n  });\n},\n    X = function (e) {\n  var i = e.data,\n      n = e.containerWidth,\n      o = e.containerHeight,\n      r = e.translateX,\n      l = void 0 === r ? 0 : r,\n      a = e.translateY,\n      c = void 0 === a ? 0 : a,\n      s = e.anchor,\n      d = e.direction,\n      h = e.padding,\n      g = void 0 === h ? 0 : h,\n      m = e.justify,\n      f = e.itemsSpacing,\n      u = void 0 === f ? 0 : f,\n      v = e.itemWidth,\n      p = e.itemHeight,\n      y = e.itemDirection,\n      b = e.itemTextColor,\n      S = e.itemBackground,\n      A = e.itemOpacity,\n      W = e.symbolShape,\n      z = e.symbolSize,\n      C = e.symbolSpacing,\n      O = e.symbolBorderWidth,\n      B = e.symbolBorderColor,\n      X = e.onClick,\n      Y = e.onMouseEnter,\n      H = e.onMouseLeave,\n      E = e.toggleSerie,\n      j = e.effects,\n      T = k({\n    itemCount: i.length,\n    itemsSpacing: u,\n    itemWidth: v,\n    itemHeight: p,\n    direction: d,\n    padding: g\n  }),\n      L = T.width,\n      M = T.height,\n      F = x({\n    anchor: s,\n    translateX: l,\n    translateY: c,\n    containerWidth: n,\n    containerHeight: o,\n    width: L,\n    height: M\n  }),\n      P = F.x,\n      R = F.y;\n  return t(w, {\n    data: i,\n    x: P,\n    y: R,\n    direction: d,\n    padding: g,\n    justify: m,\n    effects: j,\n    itemsSpacing: u,\n    itemWidth: v,\n    itemHeight: p,\n    itemDirection: y,\n    itemTextColor: b,\n    itemBackground: S,\n    itemOpacity: A,\n    symbolShape: W,\n    symbolSize: z,\n    symbolSpacing: C,\n    symbolBorderWidth: O,\n    symbolBorderColor: B,\n    onClick: X,\n    onMouseEnter: Y,\n    onMouseLeave: H,\n    toggleSerie: \"boolean\" == typeof E ? void 0 : E\n  });\n},\n    Y = {\n  start: \"left\",\n  middle: \"center\",\n  end: \"right\"\n},\n    H = function (t, e) {\n  var i = e.data,\n      n = e.containerWidth,\n      o = e.containerHeight,\n      r = e.translateX,\n      l = void 0 === r ? 0 : r,\n      a = e.translateY,\n      c = void 0 === a ? 0 : a,\n      s = e.anchor,\n      d = e.direction,\n      h = e.padding,\n      g = void 0 === h ? 0 : h,\n      m = e.justify,\n      f = void 0 !== m && m,\n      u = e.itemsSpacing,\n      v = void 0 === u ? 0 : u,\n      p = e.itemWidth,\n      y = e.itemHeight,\n      b = e.itemDirection,\n      A = void 0 === b ? \"left-to-right\" : b,\n      W = e.itemTextColor,\n      z = e.symbolSize,\n      C = void 0 === z ? 16 : z,\n      O = e.symbolSpacing,\n      B = void 0 === O ? 8 : O,\n      w = e.theme,\n      X = k({\n    itemCount: i.length,\n    itemWidth: p,\n    itemHeight: y,\n    itemsSpacing: v,\n    direction: d,\n    padding: g\n  }),\n      H = X.width,\n      E = X.height,\n      j = X.padding,\n      T = x({\n    anchor: s,\n    translateX: l,\n    translateY: c,\n    containerWidth: n,\n    containerHeight: o,\n    width: H,\n    height: E\n  }),\n      L = T.x,\n      M = T.y,\n      F = \"row\" === d ? p + v : 0,\n      P = \"column\" === d ? y + v : 0;\n  t.save(), t.translate(L, M), t.font = w.legends.text.fontSize + \"px \" + (w.legends.text.fontFamily || \"sans-serif\"), i.forEach(function (e, i) {\n    var n,\n        o,\n        r = i * F + j.left,\n        l = i * P + j.top,\n        a = S({\n      direction: A,\n      justify: f,\n      symbolSize: C,\n      symbolSpacing: B,\n      width: p,\n      height: y\n    }),\n        c = a.symbolX,\n        s = a.symbolY,\n        d = a.labelX,\n        h = a.labelY,\n        g = a.labelAnchor,\n        m = a.labelAlignment;\n    t.fillStyle = null != (n = e.color) ? n : \"black\", t.fillRect(r + c, l + s, C, C), t.textAlign = Y[g], \"central\" === m && (t.textBaseline = \"middle\"), t.fillStyle = null != (o = null != W ? W : w.legends.text.fill) ? o : \"black\", t.fillText(String(e.label), r + d, l + h);\n  }), t.restore();\n},\n    E = function (t, e) {\n  var i = e.containerWidth,\n      n = e.containerHeight,\n      o = e.anchor,\n      l = e.translateX,\n      a = void 0 === l ? 0 : l,\n      c = e.translateY,\n      s = void 0 === c ? 0 : c,\n      d = e.scale,\n      h = e.length,\n      g = void 0 === h ? y.length : h,\n      m = e.thickness,\n      f = void 0 === m ? y.thickness : m,\n      u = e.direction,\n      v = void 0 === u ? y.direction : u,\n      p = e.ticks,\n      b = e.tickPosition,\n      k = void 0 === b ? y.tickPosition : b,\n      S = e.tickSize,\n      W = void 0 === S ? y.tickSize : S,\n      z = e.tickSpacing,\n      C = void 0 === z ? y.tickSpacing : z,\n      O = e.tickOverlap,\n      B = void 0 === O ? y.tickOverlap : O,\n      w = e.tickFormat,\n      X = void 0 === w ? y.tickFormat : w,\n      Y = e.title,\n      H = e.titleAlign,\n      E = void 0 === H ? y.titleAlign : H,\n      j = e.titleOffset,\n      T = void 0 === j ? y.titleOffset : j,\n      L = e.theme,\n      M = A({\n    scale: d,\n    ticks: p,\n    length: g,\n    thickness: f,\n    direction: v,\n    tickPosition: k,\n    tickSize: W,\n    tickSpacing: C,\n    tickOverlap: B,\n    tickFormat: X,\n    title: Y,\n    titleAlign: E,\n    titleOffset: T\n  }),\n      F = M.width,\n      P = M.height,\n      R = M.gradientX1,\n      q = M.gradientY1,\n      V = M.gradientX2,\n      D = M.gradientY2,\n      G = M.colorStops,\n      I = M.ticks,\n      N = M.titleText,\n      _ = M.titleX,\n      J = M.titleY,\n      K = M.titleRotation,\n      Q = M.titleVerticalAlign,\n      U = M.titleHorizontalAlign,\n      Z = x({\n    anchor: o,\n    translateX: a,\n    translateY: s,\n    containerWidth: i,\n    containerHeight: n,\n    width: F,\n    height: P\n  }),\n      $ = Z.x,\n      tt = Z.y,\n      et = {\n    font: t.font,\n    textAlign: t.textAlign,\n    textBaseline: t.textBaseline\n  };\n  t.save(), t.translate($, tt);\n  var it = t.createLinearGradient(R * F, q * P, V * F, D * P);\n  G.forEach(function (t) {\n    it.addColorStop(t.offset, t.stopColor);\n  }), t.fillStyle = it, t.fillRect(0, 0, F, P), t.font = (L.legends.ticks.text.fontWeight ? L.legends.ticks.text.fontWeight + \" \" : \"\") + L.legends.ticks.text.fontSize + \"px \" + L.legends.ticks.text.fontFamily, I.forEach(function (e) {\n    var i;\n    (null != (i = L.legends.ticks.line.strokeWidth) ? i : 0) > 0 && (t.lineWidth = Number(L.axis.ticks.line.strokeWidth), L.axis.ticks.line.stroke && (t.strokeStyle = L.axis.ticks.line.stroke), t.lineCap = \"square\", t.beginPath(), t.moveTo(e.x1, e.y1), t.lineTo(e.x2, e.y2), t.stroke()), L.legends.ticks.text.fill && (t.fillStyle = L.legends.ticks.text.fill), t.textAlign = \"middle\" === e.textHorizontalAlign ? \"center\" : e.textHorizontalAlign, t.textBaseline = \"central\" === e.textVerticalAlign ? \"middle\" : e.textVerticalAlign, t.fillText(e.text, e.textX, e.textY);\n  }), N && (t.save(), t.translate(_, J), t.rotate(r(K)), t.font = (L.legends.title.text.fontWeight ? L.legends.title.text.fontWeight + \" \" : \"\") + L.legends.title.text.fontSize + \"px \" + L.legends.title.text.fontFamily, L.legends.title.text.fill && (t.fillStyle = L.legends.title.text.fill), t.textAlign = \"middle\" === U ? \"center\" : U, t.textBaseline = Q, t.fillText(N, 0, 0), t.restore()), t.restore(), t.font = et.font, t.textAlign = et.textAlign, t.textBaseline = et.textBaseline;\n},\n    j = function (t) {\n  var e = t.scale,\n      i = t.domain,\n      n = t.reverse,\n      o = void 0 !== n && n,\n      r = t.valueFormat,\n      l = void 0 === r ? function (t) {\n    return t;\n  } : r,\n      a = t.separator,\n      c = void 0 === a ? \" - \" : a;\n  return h(function () {\n    var t = (null != i ? i : e.range()).map(function (t, i) {\n      var n = e.invertExtent(t),\n          o = n[0],\n          r = n[1];\n      return {\n        id: t,\n        index: i,\n        extent: [o, r],\n        label: \"\" + l(o) + c + l(r),\n        value: e(o),\n        color: t\n      };\n    });\n    return o && t.reverse(), t;\n  }, [i, e, o, c, l]);\n},\n    T = {\n  data: g.arrayOf(g.object),\n  anchor: g.oneOf([\"top\", \"top-right\", \"right\", \"bottom-right\", \"bottom\", \"bottom-left\", \"left\", \"top-left\", \"center\"]).isRequired,\n  translateX: g.number,\n  translateY: g.number,\n  direction: g.oneOf([\"row\", \"column\"]).isRequired,\n  itemsSpacing: g.number,\n  itemWidth: g.number.isRequired,\n  itemHeight: g.number.isRequired,\n  itemDirection: g.oneOf([\"left-to-right\", \"right-to-left\", \"top-to-bottom\", \"bottom-to-top\"]),\n  itemTextColor: g.string,\n  itemBackground: g.string,\n  itemOpacity: g.number,\n  symbolShape: g.oneOfType([g.oneOf([\"circle\", \"diamond\", \"square\", \"triangle\"]), g.func]),\n  symbolSize: g.number,\n  symbolSpacing: g.number,\n  symbolBorderWidth: g.number,\n  symbolBorderColor: g.string,\n  onClick: g.func,\n  onMouseEnter: g.func,\n  onMouseLeave: g.func,\n  effects: g.arrayOf(g.shape({\n    on: g.oneOfType([g.oneOf([\"hover\"])]).isRequired,\n    style: g.shape({\n      itemTextColor: g.string,\n      itemBackground: g.string,\n      itemOpacity: g.number,\n      symbolSize: g.number,\n      symbolBorderWidth: g.number,\n      symbolBorderColor: g.string\n    }).isRequired\n  }))\n};\n\nexport { C as AnchoredContinuousColorsLegendSvg, X as BoxLegendSvg, W as ContinuousColorsLegendSvg, T as LegendPropShape, w as LegendSvg, B as LegendSvgItem, m as SymbolCircle, f as SymbolDiamond, u as SymbolSquare, v as SymbolTriangle, A as computeContinuousColorsLegend, k as computeDimensions, S as computeItemLayout, x as computePositionFromAnchor, y as continuousColorsLegendDefaults, E as renderContinuousColorLegendToCanvas, H as renderLegendToCanvas, j as useQuantizeColorScaleLegendData };","map":{"version":3,"mappings":"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","names":["SymbolCircle","x","y","size","fill","opacity","l","c","borderWidth","d","borderColor","_jsx","r","cx","cy","strokeWidth","stroke","style","pointerEvents","SymbolDiamond","transform","SymbolSquare","width","height","SymbolTriangle","continuousColorsLegendDefaults","length","thickness","direction","tickPosition","tickSize","tickSpacing","tickOverlap","tickFormat","value","titleAlign","titleOffset","zeroPadding","top","right","bottom","left","computeDimensions","item","itemsSpacing","_padding","padding","itemCount","itemWidth","itemHeight","Array","isArray","Error","horizontalPadding","verticalPadding","spacing","computePositionFromAnchor","anchor","translateX","translateY","containerWidth","containerHeight","computeItemLayout","symbolX","symbolY","labelX","labelY","labelAnchor","labelAlignment","justify","symbolSize","symbolSpacing","computeContinuousColorsLegend","values","scale","ticks","title","domain","reverse","positionScale","scaleLinear","range","concat","thresholds","titleX","titleY","titleRotation","titleVerticalAlign","colorStops","computeContinuousColorScaleColorStops","formatValue","getValueFormatter","computedTicks","gradientY1","gradientX2","y1","y2","textY","textVerticalAlign","forEach","push","x1","x2","text","textX","textHorizontalAlign","gradientX1","gradientY2","titleText","titleHorizontalAlign","ContinuousColorsLegendSvg","theme","useTheme","id","map","stop","offset","join","_jsxs","colorStop","textAnchor","dominantBaseline","legends","tick","index","Fragment","line","AnchoredContinuousColorsLegendSvg","a","s","h","legendProps","symbolByShape","circle","diamond","square","triangle","LegendSvgItem","data","z","B","textColor","background","Y","E","T","symbolShape","M","P","q","symbolBorderWidth","D","symbolBorderColor","onClick","onMouseEnter","onMouseLeave","toggleSerie","effects","useState","setStyle","handleMouseEnter","useCallback","event","filter","on","reduce","acc","effect","handleMouseLeave","isInteractive","some","handler","undefined","SymbolShape","itemOpacity","itemBackground","cursor","React","createElement","color","hidden","symbol","itemTextColor","userSelect","label","LegendSvg","itemDirection","g","f","p","b","xStep","yStep","i","BoxLegendSvg","textAlignMapping","start","middle","end","renderLegendToCanvas","ctx","m","u","O","save","translate","font","fontSize","fontFamily","itemX","itemY","fillStyle","fillRect","textAlign","textBaseline","fillText","String","restore","renderContinuousColorLegendToCanvas","_ticks","initialStyles","gradient","createLinearGradient","addColorStop","stopColor","fontWeight","lineWidth","Number","axis","strokeStyle","lineCap","beginPath","moveTo","lineTo","rotate","degreesToRadians","useQuantizeColorScaleLegendData","overriddenDomain","valueFormat","v","separator","useMemo","items","domainValue","invertExtent","extent","LegendPropShape","PropTypes","arrayOf","object","oneOf","isRequired","number","string","oneOfType","func","shape"],"sources":["C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolCircle.tsx","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolDiamond.tsx","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolSquare.tsx","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\svg\\symbols\\SymbolTriangle.tsx","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\defaults.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\compute.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\svg\\ContinuousColorsLegendSvg.tsx","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\svg\\AnchoredContinuousColorsLegendSvg.tsx","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\svg\\LegendSvgItem.tsx","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\svg\\LegendSvg.tsx","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\svg\\BoxLegendSvg.tsx","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\canvas.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\hooks.ts","C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@nivo\\legends\\src\\props.ts"],"sourcesContent":["import { SymbolProps } from './types'\n\nexport const SymbolCircle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <circle\n            r={size / 2}\n            cx={x + size / 2}\n            cy={y + size / 2}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolDiamond = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                    M${size / 2} 0\n                    L${size * 0.8} ${size / 2}\n                    L${size / 2} ${size}\n                    L${size * 0.2} ${size / 2}\n                    L${size / 2} 0\n                `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolSquare = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <rect\n            x={x}\n            y={y}\n            fill={fill}\n            opacity={opacity}\n            strokeWidth={borderWidth}\n            stroke={borderColor}\n            width={size}\n            height={size}\n            style={{\n                pointerEvents: 'none',\n            }}\n        />\n    )\n}\n","import { SymbolProps } from './types'\n\nexport const SymbolTriangle = ({\n    x,\n    y,\n    size,\n    fill,\n    opacity = 1,\n    borderWidth = 0,\n    borderColor = 'transparent',\n}: SymbolProps) => {\n    return (\n        <g transform={`translate(${x},${y})`}>\n            <path\n                d={`\n                M${size / 2} 0\n                L${size} ${size}\n                L0 ${size}\n                L${size / 2} 0\n            `}\n                fill={fill}\n                opacity={opacity}\n                strokeWidth={borderWidth}\n                stroke={borderColor}\n                style={{\n                    pointerEvents: 'none',\n                }}\n            />\n        </g>\n    )\n}\n","import { ContinuousColorsLegendProps } from './types'\n\nexport const continuousColorsLegendDefaults: {\n    length: NonNullable<ContinuousColorsLegendProps['length']>\n    thickness: NonNullable<ContinuousColorsLegendProps['thickness']>\n    direction: NonNullable<ContinuousColorsLegendProps['direction']>\n    tickPosition: NonNullable<ContinuousColorsLegendProps['tickPosition']>\n    tickSize: NonNullable<ContinuousColorsLegendProps['tickSize']>\n    tickSpacing: NonNullable<ContinuousColorsLegendProps['tickSpacing']>\n    tickOverlap: NonNullable<ContinuousColorsLegendProps['tickOverlap']>\n    tickFormat: NonNullable<ContinuousColorsLegendProps['tickFormat']>\n    titleAlign: NonNullable<ContinuousColorsLegendProps['titleAlign']>\n    titleOffset: NonNullable<ContinuousColorsLegendProps['titleOffset']>\n} = {\n    length: 200,\n    thickness: 16,\n    direction: 'row',\n    tickPosition: 'after',\n    tickSize: 4,\n    tickSpacing: 3,\n    tickOverlap: false,\n    tickFormat: (value: number) => `${value}`,\n    titleAlign: 'start',\n    titleOffset: 4,\n}\n","import { scaleLinear } from 'd3-scale'\nimport { getValueFormatter } from '@nivo/core'\nimport { computeContinuousColorScaleColorStops } from '@nivo/colors'\nimport {\n    BoxLegendSvgProps,\n    ContinuousColorsLegendProps,\n    LegendAnchor,\n    LegendItemDirection,\n} from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst isObject = <T>(item: unknown): item is T =>\n    typeof item === 'object' && !Array.isArray(item) && item !== null\n\nconst zeroPadding = {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n}\n\nexport const computeDimensions = ({\n    direction,\n    itemsSpacing,\n    padding: _padding,\n    itemCount,\n    itemWidth,\n    itemHeight,\n}: Pick<BoxLegendSvgProps, 'direction' | 'padding'> &\n    Record<'itemsSpacing' | 'itemCount' | 'itemWidth' | 'itemHeight', number>) => {\n    if (typeof _padding !== 'number' && !isObject(_padding)) {\n        throw new Error('Invalid property padding, must be one of: number, object')\n    }\n\n    const padding =\n        typeof _padding === 'number'\n            ? {\n                  top: _padding,\n                  right: _padding,\n                  bottom: _padding,\n                  left: _padding,\n              }\n            : {\n                  ...zeroPadding,\n                  ..._padding,\n              }\n\n    const horizontalPadding = padding.left + padding.right\n    const verticalPadding = padding.top + padding.bottom\n    let width = itemWidth + horizontalPadding\n    let height = itemHeight + verticalPadding\n    const spacing = (itemCount - 1) * itemsSpacing\n    if (direction === 'row') {\n        width = itemWidth * itemCount + spacing + horizontalPadding\n    } else if (direction === 'column') {\n        height = itemHeight * itemCount + spacing + verticalPadding\n    }\n\n    return { width, height, padding }\n}\n\nexport const computePositionFromAnchor = ({\n    anchor,\n    translateX,\n    translateY,\n    containerWidth,\n    containerHeight,\n    width,\n    height,\n}: { anchor: LegendAnchor } & Record<\n    'translateX' | 'translateY' | 'containerWidth' | 'containerHeight' | 'width' | 'height',\n    number\n>) => {\n    let x = translateX\n    let y = translateY\n\n    switch (anchor) {\n        case 'top':\n            x += (containerWidth - width) / 2\n            break\n\n        case 'top-right':\n            x += containerWidth - width\n            break\n\n        case 'right':\n            x += containerWidth - width\n            y += (containerHeight - height) / 2\n            break\n\n        case 'bottom-right':\n            x += containerWidth - width\n            y += containerHeight - height\n            break\n\n        case 'bottom':\n            x += (containerWidth - width) / 2\n            y += containerHeight - height\n            break\n\n        case 'bottom-left':\n            y += containerHeight - height\n            break\n\n        case 'left':\n            y += (containerHeight - height) / 2\n            break\n\n        case 'center':\n            x += (containerWidth - width) / 2\n            y += (containerHeight - height) / 2\n            break\n    }\n\n    return { x, y }\n}\n\nexport const computeItemLayout = ({\n    direction,\n    justify,\n    symbolSize,\n    symbolSpacing,\n    width,\n    height,\n}: {\n    direction: LegendItemDirection\n    justify: boolean\n} & Record<'symbolSize' | 'symbolSpacing' | 'width' | 'height', number>) => {\n    let symbolX\n    let symbolY\n\n    let labelX\n    let labelY\n    let labelAnchor: 'start' | 'middle' | 'end'\n    let labelAlignment: 'alphabetic' | 'central' | 'text-before-edge'\n\n    switch (direction) {\n        case 'left-to-right':\n            symbolX = 0\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = width\n                labelAnchor = 'end'\n            } else {\n                labelX = symbolSize + symbolSpacing\n                labelAnchor = 'start'\n            }\n            break\n\n        case 'right-to-left':\n            symbolX = width - symbolSize\n            symbolY = (height - symbolSize) / 2\n\n            labelY = height / 2\n            labelAlignment = 'central'\n            if (justify) {\n                labelX = 0\n                labelAnchor = 'start'\n            } else {\n                labelX = width - symbolSize - symbolSpacing\n                labelAnchor = 'end'\n            }\n            break\n\n        case 'top-to-bottom':\n            symbolX = (width - symbolSize) / 2\n            symbolY = 0\n\n            labelX = width / 2\n\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = height\n                labelAlignment = 'alphabetic'\n            } else {\n                labelY = symbolSize + symbolSpacing\n                labelAlignment = 'text-before-edge'\n            }\n            break\n\n        case 'bottom-to-top':\n            symbolX = (width - symbolSize) / 2\n            symbolY = height - symbolSize\n\n            labelX = width / 2\n            labelAnchor = 'middle'\n            if (justify) {\n                labelY = 0\n                labelAlignment = 'text-before-edge'\n            } else {\n                labelY = height - symbolSize - symbolSpacing\n                labelAlignment = 'alphabetic'\n            }\n            break\n    }\n\n    return {\n        symbolX,\n        symbolY,\n        labelX,\n        labelY,\n        labelAnchor,\n        labelAlignment,\n    }\n}\n\nexport const computeContinuousColorsLegend = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    // left to right for `row`, bottom to top for `column`\n    const domain = direction === 'column' ? [...scale.domain()].reverse() : scale.domain()\n\n    const positionScale = scaleLinear().domain(domain)\n    if (domain.length === 2) {\n        // sequential, quantize\n        positionScale.range([0, length])\n    } else if (domain.length === 3) {\n        // diverging\n        positionScale.range([0, length / 2, length])\n    }\n\n    let values: number[]\n    if ('thresholds' in scale) {\n        // quantize\n        values = [domain[0], ...scale.thresholds(), domain[1]]\n    } else {\n        // sequential, diverging\n        values = Array.isArray(ticks) ? ticks : (scale as any).ticks(ticks)\n    }\n\n    const colorStops = computeContinuousColorScaleColorStops(scale, 32)\n\n    const formatValue = getValueFormatter(tickFormat)\n\n    const computedTicks: {\n        x1: number\n        y1: number\n        x2: number\n        y2: number\n        text: string\n        textX: number\n        textY: number\n        textHorizontalAlign: 'start' | 'middle' | 'end'\n        textVerticalAlign: 'alphabetic' | 'central' | 'hanging'\n    }[] = []\n\n    let width: number\n    let height: number\n\n    const gradientX1 = 0\n    let gradientY1 = 0\n    let gradientX2 = 0\n    const gradientY2 = 0\n\n    let titleX: number\n    let titleY: number\n    let titleRotation: number\n    let titleVerticalAlign: 'alphabetic' | 'hanging'\n\n    if (direction === 'row') {\n        width = length\n        height = thickness\n\n        gradientX2 = 1\n\n        let y1: number\n        let y2: number\n\n        let textY: number\n        const textHorizontalAlign = 'middle'\n        let textVerticalAlign: 'alphabetic' | 'hanging'\n\n        titleRotation = 0\n        if (titleAlign === 'start') {\n            titleX = 0\n        } else if (titleAlign === 'middle') {\n            titleX = length / 2\n        } else {\n            titleX = length\n        }\n\n        if (tickPosition === 'before') {\n            y1 = -tickSize\n            y2 = tickOverlap ? thickness : 0\n\n            textY = -tickSize - tickSpacing\n            textVerticalAlign = 'alphabetic'\n\n            titleY = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            y1 = tickOverlap ? 0 : thickness\n            y2 = thickness + tickSize\n\n            textY = y2 + tickSpacing\n            textVerticalAlign = 'hanging'\n\n            titleY = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const x = positionScale(value)\n\n            computedTicks.push({\n                x1: x,\n                y1,\n                x2: x,\n                y2,\n                text: formatValue(value),\n                textX: x,\n                textY,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    } else {\n        width = thickness\n        height = length\n\n        gradientY1 = 1\n\n        let x1: number\n        let x2: number\n\n        let textX: number\n        let textHorizontalAlign: 'start' | 'end'\n        const textVerticalAlign = 'central'\n\n        titleRotation = -90\n        if (titleAlign === 'start') {\n            titleY = length\n        } else if (titleAlign === 'middle') {\n            titleY = length / 2\n        } else {\n            titleY = 0\n        }\n\n        if (tickPosition === 'before') {\n            x1 = -tickSize\n            x2 = tickOverlap ? thickness : 0\n\n            textX = x1 - tickSpacing\n            textHorizontalAlign = 'end'\n\n            titleX = thickness + titleOffset\n            titleVerticalAlign = 'hanging'\n        } else {\n            x1 = tickOverlap ? 0 : thickness\n            x2 = thickness + tickSize\n\n            textX = x2 + tickSpacing\n            textHorizontalAlign = 'start'\n\n            titleX = -titleOffset\n            titleVerticalAlign = 'alphabetic'\n        }\n\n        values.forEach(value => {\n            const y = positionScale(value)\n\n            computedTicks.push({\n                x1,\n                y1: y,\n                x2,\n                y2: y,\n                text: formatValue(value),\n                textX,\n                textY: y,\n                textHorizontalAlign,\n                textVerticalAlign,\n            })\n        })\n    }\n\n    return {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks: computedTicks,\n        titleText: title,\n        titleX,\n        titleY,\n        titleRotation,\n        titleHorizontalAlign: titleAlign,\n        titleVerticalAlign,\n    }\n}\n","import { Fragment } from 'react'\nimport { useTheme } from '@nivo/core'\nimport { computeContinuousColorsLegend } from '../compute'\nimport { ContinuousColorsLegendProps } from '../types'\nimport { continuousColorsLegendDefaults } from '../defaults'\n\nexport const ContinuousColorsLegendSvg = ({\n    scale,\n    ticks,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    tickPosition = continuousColorsLegendDefaults.tickPosition,\n    tickSize = continuousColorsLegendDefaults.tickSize,\n    tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n    tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n    tickFormat = continuousColorsLegendDefaults.tickFormat,\n    title,\n    titleAlign = continuousColorsLegendDefaults.titleAlign,\n    titleOffset = continuousColorsLegendDefaults.titleOffset,\n}: ContinuousColorsLegendProps) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        ticks: computedTicks,\n        colorStops,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const theme = useTheme()\n\n    const id = `ContinuousColorsLegendSvgGradient.${direction}.${colorStops\n        .map(stop => stop.offset)\n        .join('_')}`\n\n    return (\n        <g>\n            <defs>\n                <linearGradient\n                    id={id}\n                    x1={gradientX1}\n                    y1={gradientY1}\n                    x2={gradientX2}\n                    y2={gradientY2}\n                >\n                    {colorStops.map(colorStop => (\n                        <stop {...colorStop} />\n                    ))}\n                </linearGradient>\n            </defs>\n            {titleText && (\n                <text\n                    transform={`translate(${titleX}, ${titleY}) rotate(${titleRotation})`}\n                    textAnchor={titleHorizontalAlign}\n                    dominantBaseline={titleVerticalAlign}\n                    style={theme.legends.title.text}\n                >\n                    {titleText}\n                </text>\n            )}\n            <rect width={width} height={height} fill={`url(#${id}`} />\n            {computedTicks.map((tick, index) => (\n                <Fragment key={index}>\n                    <line\n                        x1={tick.x1}\n                        y1={tick.y1}\n                        x2={tick.x2}\n                        y2={tick.y2}\n                        style={theme.legends.ticks.line}\n                    />\n                    <text\n                        x={tick.textX}\n                        y={tick.textY}\n                        textAnchor={tick.textHorizontalAlign}\n                        dominantBaseline={tick.textVerticalAlign}\n                        style={theme.legends.ticks.text}\n                    >\n                        {tick.text}\n                    </text>\n                </Fragment>\n            ))}\n        </g>\n    )\n}\n","import { AnchoredContinuousColorsLegendProps } from '../types'\nimport { computePositionFromAnchor } from '../compute'\nimport { continuousColorsLegendDefaults } from '../defaults'\nimport { ContinuousColorsLegendSvg } from './ContinuousColorsLegendSvg'\n\nexport const AnchoredContinuousColorsLegendSvg = ({\n    containerWidth,\n    containerHeight,\n    anchor,\n    translateX = 0,\n    translateY = 0,\n    length = continuousColorsLegendDefaults.length,\n    thickness = continuousColorsLegendDefaults.thickness,\n    direction = continuousColorsLegendDefaults.direction,\n    ...legendProps\n}: AnchoredContinuousColorsLegendProps) => {\n    let width: number\n    let height: number\n    if (direction === 'row') {\n        width = length\n        height = thickness\n    } else {\n        width = thickness\n        height = length\n    }\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <g transform={`translate(${x}, ${y})`}>\n            <ContinuousColorsLegendSvg\n                length={length}\n                thickness={thickness}\n                direction={direction}\n                {...legendProps}\n            />\n        </g>\n    )\n}\n","import { useState, useCallback } from 'react'\nimport * as React from 'react'\nimport { useTheme } from '@nivo/core'\nimport { LegendSvgItemProps } from '../types'\nimport { computeItemLayout } from '../compute'\nimport { SymbolCircle, SymbolDiamond, SymbolSquare, SymbolTriangle } from './symbols'\n\ntype Style = Partial<{\n    itemBackground: string\n    itemOpacity: number\n    itemTextColor: string\n    symbolBorderColor: string\n    symbolBorderWidth: number\n    symbolSize: number\n}>\n\nconst symbolByShape = {\n    circle: SymbolCircle,\n    diamond: SymbolDiamond,\n    square: SymbolSquare,\n    triangle: SymbolTriangle,\n}\n\nexport const LegendSvgItem = ({\n    x,\n    y,\n    width,\n    height,\n    data,\n    direction = 'left-to-right',\n    justify = false,\n    textColor,\n    background = 'transparent',\n    opacity = 1,\n\n    symbolShape = 'square',\n    symbolSize = 16,\n    symbolSpacing = 8,\n    symbolBorderWidth = 0,\n    symbolBorderColor = 'transparent',\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: LegendSvgItemProps) => {\n    const [style, setStyle] = useState<Style>({})\n    const theme = useTheme()\n\n    const handleMouseEnter = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on === 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseEnter?.(data, event)\n        },\n        [onMouseEnter, data, effects]\n    )\n    const handleMouseLeave = useCallback(\n        (event: React.MouseEvent<SVGRectElement>) => {\n            if (effects) {\n                const applyEffects = effects.filter(({ on }) => on !== 'hover')\n                const style = applyEffects.reduce(\n                    (acc, effect) => ({\n                        ...acc,\n                        ...effect.style,\n                    }),\n                    {}\n                )\n                setStyle(style)\n            }\n\n            onMouseLeave?.(data, event)\n        },\n        [onMouseLeave, data, effects]\n    )\n\n    const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout({\n        direction,\n        justify,\n        symbolSize: style.symbolSize ?? symbolSize,\n        symbolSpacing,\n        width,\n        height,\n    })\n\n    const isInteractive = [onClick, onMouseEnter, onMouseLeave, toggleSerie].some(\n        handler => handler !== undefined\n    )\n\n    const SymbolShape = typeof symbolShape === 'function' ? symbolShape : symbolByShape[symbolShape]\n\n    return (\n        <g\n            transform={`translate(${x},${y})`}\n            style={{\n                opacity: style.itemOpacity ?? opacity,\n            }}\n        >\n            <rect\n                width={width}\n                height={height}\n                fill={style.itemBackground ?? background}\n                style={{\n                    cursor: isInteractive ? 'pointer' : 'auto',\n                }}\n                onClick={event => {\n                    onClick?.(data, event)\n                    toggleSerie?.(data.id)\n                }}\n                onMouseEnter={handleMouseEnter}\n                onMouseLeave={handleMouseLeave}\n            />\n            {React.createElement(SymbolShape, {\n                id: data.id,\n                x: symbolX,\n                y: symbolY,\n                size: style.symbolSize ?? symbolSize,\n                fill: data.fill ?? data.color ?? 'black',\n                borderWidth: style.symbolBorderWidth ?? symbolBorderWidth,\n                borderColor: style.symbolBorderColor ?? symbolBorderColor,\n                ...(data.hidden ? theme.legends.hidden.symbol : undefined),\n            })}\n            <text\n                textAnchor={labelAnchor}\n                style={{\n                    ...theme.legends.text,\n                    fill: style.itemTextColor ?? textColor ?? theme.legends.text.fill ?? 'black',\n                    dominantBaseline: labelAlignment,\n                    pointerEvents: 'none',\n                    userSelect: 'none',\n                    ...(data.hidden ? theme.legends.hidden.text : undefined),\n                }}\n                x={labelX}\n                y={labelY}\n            >\n                {data.label}\n            </text>\n        </g>\n    )\n}\n","import { LegendSvgItem } from './LegendSvgItem'\nimport { LegendSvgProps } from '../types'\nimport { computeDimensions } from '../compute'\n\nexport const LegendSvg = ({\n    data,\n\n    x,\n    y,\n    direction,\n    padding: _padding = 0,\n    justify,\n    effects,\n\n    itemWidth,\n    itemHeight,\n    itemDirection = 'left-to-right',\n    itemsSpacing = 0,\n    itemTextColor,\n    itemBackground = 'transparent',\n    itemOpacity = 1,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n}: LegendSvgProps) => {\n    const { padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    return (\n        <g transform={`translate(${x},${y})`}>\n            {data.map((data, i) => (\n                <LegendSvgItem\n                    key={i}\n                    data={data}\n                    x={i * xStep + padding.left}\n                    y={i * yStep + padding.top}\n                    width={itemWidth}\n                    height={itemHeight}\n                    direction={itemDirection}\n                    justify={justify}\n                    effects={effects}\n                    textColor={itemTextColor}\n                    background={itemBackground}\n                    opacity={itemOpacity}\n                    symbolShape={symbolShape}\n                    symbolSize={symbolSize}\n                    symbolSpacing={symbolSpacing}\n                    symbolBorderWidth={symbolBorderWidth}\n                    symbolBorderColor={symbolBorderColor}\n                    onClick={onClick}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                    toggleSerie={toggleSerie}\n                />\n            ))}\n        </g>\n    )\n}\n","import { LegendSvg } from './LegendSvg'\nimport { BoxLegendSvgProps } from '../types'\nimport { computeDimensions, computePositionFromAnchor } from '../compute'\n\nexport const BoxLegendSvg = ({\n    data,\n\n    containerWidth,\n    containerHeight,\n    translateX = 0,\n    translateY = 0,\n    anchor,\n    direction,\n    padding = 0,\n    justify,\n\n    itemsSpacing = 0,\n    itemWidth,\n    itemHeight,\n    itemDirection,\n    itemTextColor,\n    itemBackground,\n    itemOpacity,\n\n    symbolShape,\n    symbolSize,\n    symbolSpacing,\n    symbolBorderWidth,\n    symbolBorderColor,\n\n    onClick,\n    onMouseEnter,\n    onMouseLeave,\n    toggleSerie,\n\n    effects,\n}: BoxLegendSvgProps) => {\n    const { width, height } = computeDimensions({\n        itemCount: data.length,\n        itemsSpacing,\n        itemWidth,\n        itemHeight,\n        direction,\n        padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    return (\n        <LegendSvg\n            data={data}\n            x={x}\n            y={y}\n            direction={direction}\n            padding={padding}\n            justify={justify}\n            effects={effects}\n            itemsSpacing={itemsSpacing}\n            itemWidth={itemWidth}\n            itemHeight={itemHeight}\n            itemDirection={itemDirection}\n            itemTextColor={itemTextColor}\n            itemBackground={itemBackground}\n            itemOpacity={itemOpacity}\n            symbolShape={symbolShape}\n            symbolSize={symbolSize}\n            symbolSpacing={symbolSpacing}\n            symbolBorderWidth={symbolBorderWidth}\n            symbolBorderColor={symbolBorderColor}\n            onClick={onClick}\n            onMouseEnter={onMouseEnter}\n            onMouseLeave={onMouseLeave}\n            toggleSerie={typeof toggleSerie === 'boolean' ? undefined : toggleSerie}\n        />\n    )\n}\n","import { CompleteTheme, degreesToRadians } from '@nivo/core'\nimport {\n    computeDimensions,\n    computePositionFromAnchor,\n    computeItemLayout,\n    computeContinuousColorsLegend,\n} from './compute'\nimport { AnchoredContinuousColorsLegendProps, LegendCanvasProps } from './types'\nimport { continuousColorsLegendDefaults } from './defaults'\n\nconst textAlignMapping = {\n    start: 'left',\n    middle: 'center',\n    end: 'right',\n} as const\n\nexport const renderLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        data,\n\n        containerWidth,\n        containerHeight,\n        translateX = 0,\n        translateY = 0,\n        anchor,\n        direction,\n        padding: _padding = 0,\n        justify = false,\n\n        // items\n        itemsSpacing = 0,\n        itemWidth,\n        itemHeight,\n        itemDirection = 'left-to-right',\n        itemTextColor,\n\n        // symbol\n        symbolSize = 16,\n        symbolSpacing = 8,\n        // @todo add support for shapes\n        // symbolShape = LegendSvgItem.defaultProps.symbolShape,\n\n        theme,\n    }: LegendCanvasProps\n) => {\n    const { width, height, padding } = computeDimensions({\n        itemCount: data.length,\n        itemWidth,\n        itemHeight,\n        itemsSpacing,\n        direction,\n        padding: _padding,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const xStep = direction === 'row' ? itemWidth + itemsSpacing : 0\n    const yStep = direction === 'column' ? itemHeight + itemsSpacing : 0\n\n    ctx.save()\n    ctx.translate(x, y)\n\n    ctx.font = `${theme.legends.text.fontSize}px ${theme.legends.text.fontFamily || 'sans-serif'}`\n\n    data.forEach((d, i) => {\n        const itemX = i * xStep + padding.left\n        const itemY = i * yStep + padding.top\n\n        const { symbolX, symbolY, labelX, labelY, labelAnchor, labelAlignment } = computeItemLayout(\n            {\n                direction: itemDirection,\n                justify,\n                symbolSize,\n                symbolSpacing,\n                width: itemWidth,\n                height: itemHeight,\n            }\n        )\n\n        ctx.fillStyle = d.color ?? 'black'\n        ctx.fillRect(itemX + symbolX, itemY + symbolY, symbolSize, symbolSize)\n\n        ctx.textAlign = textAlignMapping[labelAnchor]\n\n        if (labelAlignment === 'central') {\n            ctx.textBaseline = 'middle'\n        }\n\n        ctx.fillStyle = itemTextColor ?? theme.legends.text.fill ?? 'black'\n        ctx.fillText(String(d.label), itemX + labelX, itemY + labelY)\n    })\n\n    ctx.restore()\n}\n\nexport const renderContinuousColorLegendToCanvas = (\n    ctx: CanvasRenderingContext2D,\n    {\n        containerWidth,\n        containerHeight,\n        anchor,\n        translateX = 0,\n        translateY = 0,\n        scale,\n        length = continuousColorsLegendDefaults.length,\n        thickness = continuousColorsLegendDefaults.thickness,\n        direction = continuousColorsLegendDefaults.direction,\n        ticks: _ticks,\n        tickPosition = continuousColorsLegendDefaults.tickPosition,\n        tickSize = continuousColorsLegendDefaults.tickSize,\n        tickSpacing = continuousColorsLegendDefaults.tickSpacing,\n        tickOverlap = continuousColorsLegendDefaults.tickOverlap,\n        tickFormat = continuousColorsLegendDefaults.tickFormat,\n        title,\n        titleAlign = continuousColorsLegendDefaults.titleAlign,\n        titleOffset = continuousColorsLegendDefaults.titleOffset,\n        theme,\n    }: AnchoredContinuousColorsLegendProps & {\n        theme: CompleteTheme\n    }\n) => {\n    const {\n        width,\n        height,\n        gradientX1,\n        gradientY1,\n        gradientX2,\n        gradientY2,\n        colorStops,\n        ticks,\n        titleText,\n        titleX,\n        titleY,\n        titleRotation,\n        titleVerticalAlign,\n        titleHorizontalAlign,\n    } = computeContinuousColorsLegend({\n        scale,\n        ticks: _ticks,\n        length,\n        thickness,\n        direction,\n        tickPosition,\n        tickSize,\n        tickSpacing,\n        tickOverlap,\n        tickFormat,\n        title,\n        titleAlign,\n        titleOffset,\n    })\n\n    const { x, y } = computePositionFromAnchor({\n        anchor,\n        translateX,\n        translateY,\n        containerWidth,\n        containerHeight,\n        width,\n        height,\n    })\n\n    const initialStyles = {\n        font: ctx.font,\n        textAlign: ctx.textAlign,\n        textBaseline: ctx.textBaseline,\n    }\n    ctx.save()\n\n    ctx.translate(x, y)\n\n    const gradient = ctx.createLinearGradient(\n        gradientX1 * width,\n        gradientY1 * height,\n        gradientX2 * width,\n        gradientY2 * height\n    )\n    colorStops.forEach(colorStop => {\n        gradient.addColorStop(colorStop.offset, colorStop.stopColor)\n    })\n\n    ctx.fillStyle = gradient\n    ctx.fillRect(0, 0, width, height)\n\n    ctx.font = `${\n        theme.legends.ticks.text.fontWeight ? `${theme.legends.ticks.text.fontWeight} ` : ''\n    }${theme.legends.ticks.text.fontSize}px ${theme.legends.ticks.text.fontFamily}`\n\n    ticks.forEach(tick => {\n        if ((theme.legends.ticks.line.strokeWidth ?? 0) > 0) {\n            ctx.lineWidth = Number(theme.axis.ticks.line.strokeWidth)\n            if (theme.axis.ticks.line.stroke) {\n                ctx.strokeStyle = theme.axis.ticks.line.stroke\n            }\n            ctx.lineCap = 'square'\n\n            ctx.beginPath()\n            ctx.moveTo(tick.x1, tick.y1)\n            ctx.lineTo(tick.x2, tick.y2)\n            ctx.stroke()\n        }\n\n        if (theme.legends.ticks.text.fill) {\n            ctx.fillStyle = theme.legends.ticks.text.fill\n        }\n        ctx.textAlign = tick.textHorizontalAlign === 'middle' ? 'center' : tick.textHorizontalAlign\n        ctx.textBaseline = tick.textVerticalAlign === 'central' ? 'middle' : tick.textVerticalAlign\n\n        ctx.fillText(tick.text, tick.textX, tick.textY)\n    })\n\n    if (titleText) {\n        ctx.save()\n        ctx.translate(titleX, titleY)\n        ctx.rotate(degreesToRadians(titleRotation))\n\n        ctx.font = `${\n            theme.legends.title.text.fontWeight ? `${theme.legends.title.text.fontWeight} ` : ''\n        }${theme.legends.title.text.fontSize}px ${theme.legends.title.text.fontFamily}`\n        if (theme.legends.title.text.fill) {\n            ctx.fillStyle = theme.legends.title.text.fill\n        }\n        ctx.textAlign = titleHorizontalAlign === 'middle' ? 'center' : titleHorizontalAlign\n        ctx.textBaseline = titleVerticalAlign\n\n        ctx.fillText(titleText, 0, 0)\n\n        ctx.restore()\n    }\n\n    ctx.restore()\n\n    ctx.font = initialStyles.font\n    ctx.textAlign = initialStyles.textAlign\n    ctx.textBaseline = initialStyles.textBaseline\n}\n","import { useMemo } from 'react'\n\ntype Scale = {\n    (value: number): number\n    invertExtent: (value: number) => [number, number]\n    range: () => number[]\n}\n\nexport const useQuantizeColorScaleLegendData = ({\n    scale,\n    domain: overriddenDomain,\n    reverse = false,\n    valueFormat = v => v,\n    separator = ' - ',\n}: {\n    scale: Scale\n    domain?: number[]\n    reverse?: boolean\n    valueFormat?: <T, U>(value: T) => T | U\n    separator?: string\n}) => {\n    return useMemo(() => {\n        const domain = overriddenDomain ?? scale.range()\n\n        const items = domain.map((domainValue, index) => {\n            const [start, end] = scale.invertExtent(domainValue)\n\n            return {\n                id: domainValue,\n                index,\n                extent: [start, end],\n                label: `${valueFormat(start)}${separator}${valueFormat(end)}`,\n                value: scale(start),\n                color: domainValue,\n            }\n        })\n\n        if (reverse) items.reverse()\n\n        return items\n    }, [overriddenDomain, scale, reverse, separator, valueFormat])\n}\n","import PropTypes from 'prop-types'\n\n/**\n * The prop type is exported as a simple object instead of `PropTypes.shape`\n * to be able to add extra properties.\n *\n * @example\n * ```javascript\n * import { LegendPropShape } from '@nivo/legends'\n *\n * const customLegendPropType = PropTypes.shape({\n *     ...LegendPropShape,\n *     extra: PropTypes.any.isRequired,\n * })\n * ```\n */\nexport const LegendPropShape = {\n    data: PropTypes.arrayOf(PropTypes.object),\n\n    // position & layout\n    anchor: PropTypes.oneOf([\n        'top',\n        'top-right',\n        'right',\n        'bottom-right',\n        'bottom',\n        'bottom-left',\n        'left',\n        'top-left',\n        'center',\n    ]).isRequired,\n    translateX: PropTypes.number,\n    translateY: PropTypes.number,\n    direction: PropTypes.oneOf(['row', 'column']).isRequired,\n\n    // item\n    itemsSpacing: PropTypes.number,\n    itemWidth: PropTypes.number.isRequired,\n    itemHeight: PropTypes.number.isRequired,\n    itemDirection: PropTypes.oneOf([\n        'left-to-right',\n        'right-to-left',\n        'top-to-bottom',\n        'bottom-to-top',\n    ]),\n    itemTextColor: PropTypes.string,\n    itemBackground: PropTypes.string,\n    itemOpacity: PropTypes.number,\n\n    symbolShape: PropTypes.oneOfType([\n        PropTypes.oneOf(['circle', 'diamond', 'square', 'triangle']),\n        PropTypes.func,\n    ]),\n    symbolSize: PropTypes.number,\n    symbolSpacing: PropTypes.number,\n    symbolBorderWidth: PropTypes.number,\n    symbolBorderColor: PropTypes.string,\n\n    onClick: PropTypes.func,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n\n    effects: PropTypes.arrayOf(\n        PropTypes.shape({\n            on: PropTypes.oneOfType([PropTypes.oneOf(['hover'])]).isRequired,\n            style: PropTypes.shape({\n                itemTextColor: PropTypes.string,\n                itemBackground: PropTypes.string,\n                itemOpacity: PropTypes.number,\n                symbolSize: PropTypes.number,\n                symbolBorderWidth: PropTypes.number,\n                symbolBorderColor: PropTypes.string,\n            }).isRequired,\n        })\n    ),\n}\n"]},"metadata":{},"sourceType":"module"}