{"ast":null,"code":"import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\nimport { persistStore, persistReducer, FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER } from \"redux-persist\";\nimport storageSession from \"redux-persist/lib/storage/session\";\nimport userReducer from \"../slice/userSlice\";\nimport logoReducer from \"../slice/logoSlice\";\nimport playerReducer from \"../slice/playerSlice\";\nimport gameReducer from \"../slice/gameSlice\";\nimport configReducer from \"../slice/configSlice\";\nconst persistConfig = {\n  key: \"root\",\n  version: 1,\n  storage: storageSession\n};\nconst rootReducer = combineReducers({\n  user: userReducer,\n  logo: logoReducer,\n  player: playerReducer,\n  game: gameReducer,\n  config: configReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nconst store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: {\n      ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\n    }\n  })\n});\nexport const persistor = persistStore(store);\nexport default store;","map":{"version":3,"names":["configureStore","combineReducers","persistStore","persistReducer","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","storageSession","userReducer","logoReducer","playerReducer","gameReducer","configReducer","persistConfig","key","version","storage","rootReducer","user","logo","player","game","config","persistedReducer","store","reducer","middleware","getDefaultMiddleware","serializableCheck","ignoreActions","persistor"],"sources":["C:/Users/multicampus/Desktop/projects/theground/front-end/src/redux/store/index.js"],"sourcesContent":["import { configureStore, combineReducers } from \"@reduxjs/toolkit\";\r\nimport {\r\n  persistStore,\r\n  persistReducer,\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from \"redux-persist\";\r\nimport storageSession from \"redux-persist/lib/storage/session\";\r\n\r\nimport userReducer from \"../slice/userSlice\";\r\nimport logoReducer from \"../slice/logoSlice\";\r\nimport playerReducer from \"../slice/playerSlice\";\r\nimport gameReducer from \"../slice/gameSlice\";\r\nimport configReducer from \"../slice/configSlice\";\r\n\r\nconst persistConfig = {\r\n  key: \"root\",\r\n  version: 1,\r\n  storage: storageSession,\r\n};\r\n\r\nconst rootReducer = combineReducers({\r\n  user: userReducer,\r\n  logo: logoReducer,\r\n  player: playerReducer,\r\n  game: gameReducer,\r\n  config: configReducer,\r\n});\r\n\r\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\r\n\r\nconst store = configureStore({\r\n  reducer: persistedReducer,\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware({\r\n      serializableCheck: {\r\n        ignoreActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n    }),\r\n});\r\n\r\nexport const persistor = persistStore(store);\r\nexport default store;\r\n"],"mappings":"AAAA,SAASA,cAAT,EAAyBC,eAAzB,QAAgD,kBAAhD;AACA,SACEC,YADF,EAEEC,cAFF,EAGEC,KAHF,EAIEC,SAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,KAPF,EAQEC,QARF,QASO,eATP;AAUA,OAAOC,cAAP,MAA2B,mCAA3B;AAEA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AAEA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBC,OAAO,EAAE,CAFW;EAGpBC,OAAO,EAAET;AAHW,CAAtB;AAMA,MAAMU,WAAW,GAAGnB,eAAe,CAAC;EAClCoB,IAAI,EAAEV,WAD4B;EAElCW,IAAI,EAAEV,WAF4B;EAGlCW,MAAM,EAAEV,aAH0B;EAIlCW,IAAI,EAAEV,WAJ4B;EAKlCW,MAAM,EAAEV;AAL0B,CAAD,CAAnC;AAQA,MAAMW,gBAAgB,GAAGvB,cAAc,CAACa,aAAD,EAAgBI,WAAhB,CAAvC;AAEA,MAAMO,KAAK,GAAG3B,cAAc,CAAC;EAC3B4B,OAAO,EAAEF,gBADkB;EAE3BG,UAAU,EAAGC,oBAAD,IACVA,oBAAoB,CAAC;IACnBC,iBAAiB,EAAE;MACjBC,aAAa,EAAE,CAAC5B,KAAD,EAAQC,SAAR,EAAmBC,KAAnB,EAA0BC,OAA1B,EAAmCC,KAAnC,EAA0CC,QAA1C;IADE;EADA,CAAD;AAHK,CAAD,CAA5B;AAUA,OAAO,MAAMwB,SAAS,GAAG/B,YAAY,CAACyB,KAAD,CAA9B;AACP,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}