{"ast":null,"code":"import { AsapQueue } from './AsapQueue.js';\nimport { TaskFactory } from './TaskFactory.js';\nconst asapQueue = new AsapQueue();\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError);\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\n\nexport function asap(task) {\n  asapQueue.enqueueTask(taskFactory.create(task));\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,gBAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAGA,MAAMC,SAAS,GAAG,IAAIF,SAAJ,EAAlB;AACA,MAAMG,WAAW,GAAG,IAAIF,WAAJ,CAAgBC,SAAS,CAACE,oBAA1B,CAApB;AAEA;;;;;;;;;AAQA,OAAO,SAASC,IAAT,CAAcC,IAAd,EAA4B;EAClCJ,SAAS,CAACK,WAAVL,CAAsBC,WAAW,CAACK,MAAZL,CAAmBG,IAAnBH,CAAtBD;AACA","names":["AsapQueue","TaskFactory","asapQueue","taskFactory","registerPendingError","asap","task","enqueueTask","create"],"sources":["C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@react-dnd\\asap\\src\\asap.ts"],"sourcesContent":["import { AsapQueue } from './AsapQueue.js'\nimport { TaskFactory } from './TaskFactory.js'\nimport type { TaskFn } from './types.js'\n\nconst asapQueue = new AsapQueue()\nconst taskFactory = new TaskFactory(asapQueue.registerPendingError)\n\n/**\n * Calls a task as soon as possible after returning, in its own event, with priority\n * over other events like animation, reflow, and repaint. An error thrown from an\n * event will not interrupt, nor even substantially slow down the processing of\n * other events, but will be rather postponed to a lower priority event.\n * @param {{call}} task A callable object, typically a function that takes no\n * arguments.\n */\nexport function asap(task: TaskFn) {\n\tasapQueue.enqueueTask(taskFactory.create(task))\n}\n"]},"metadata":{},"sourceType":"module"}