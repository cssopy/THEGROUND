{"ast":null,"code":"import { memo, useEffect } from 'react';\n/**\n * A utility for rendering a drag preview image\n */\n\nexport const DragPreviewImage = memo(function DragPreviewImage(_ref) {\n  let {\n    connect,\n    src\n  } = _ref;\n  useEffect(() => {\n    if (typeof Image === 'undefined') return;\n    let connected = false;\n    const img = new Image();\n    img.src = src;\n\n    img.onload = () => {\n      connect(img);\n      connected = true;\n    };\n\n    return () => {\n      if (connected) {\n        connect(null);\n      }\n    };\n  });\n  return null;\n});","map":{"version":3,"mappings":"AACA,SAASA,IAAT,EAAeC,SAAf,QAAgC,OAAhC;AAQA;;;;AAGA,OAAO,MAAMC,gBAAgB,GAA8BF,IAAI,CAC9D,SAASE,gBAAT,OAA4C;EAAA,IAAlB;IAAEC,OAAF;IAAWC;EAAX,CAAkB;EAC3CH,SAAS,CAAC,MAAM;IACf,IAAI,OAAOI,KAAP,KAAiB,WAArB,EAAkC;IAElC,IAAIC,SAAS,GAAG,KAAhB;IACA,MAAMC,GAAG,GAAG,IAAIF,KAAJ,EAAZ;IACAE,GAAG,CAACH,GAAJG,GAAUH,GAAVG;;IACAA,GAAG,CAACC,MAAJD,GAAa,MAAM;MAClBJ,OAAO,CAACI,GAAD,CAAPJ;MACAG,SAAS,GAAG,IAAZA;IACA,CAHDC;;IAIA,OAAO,MAAM;MACZ,IAAID,SAAJ,EAAe;QACdH,OAAO,CAAC,IAAD,CAAPA;MACA;IACD,CAJD;EAKA,CAfQ,CAATF;EAiBA,OAAO,IAAP;AACA,CApB6D,CAAxD","names":["memo","useEffect","DragPreviewImage","connect","src","Image","connected","img","onload"],"sources":["C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\react-dnd\\src\\core\\DragPreviewImage.ts"],"sourcesContent":["import type { FC } from 'react'\nimport { memo, useEffect } from 'react'\n\nimport type { ConnectDragPreview } from '../types/index.js'\n\nexport interface DragPreviewImageProps {\n\tconnect: ConnectDragPreview\n\tsrc: string\n}\n/**\n * A utility for rendering a drag preview image\n */\nexport const DragPreviewImage: FC<DragPreviewImageProps> = memo(\n\tfunction DragPreviewImage({ connect, src }) {\n\t\tuseEffect(() => {\n\t\t\tif (typeof Image === 'undefined') return\n\n\t\t\tlet connected = false\n\t\t\tconst img = new Image()\n\t\t\timg.src = src\n\t\t\timg.onload = () => {\n\t\t\t\tconnect(img)\n\t\t\t\tconnected = true\n\t\t\t}\n\t\t\treturn () => {\n\t\t\t\tif (connected) {\n\t\t\t\t\tconnect(null)\n\t\t\t\t}\n\t\t\t}\n\t\t})\n\n\t\treturn null\n\t},\n)\n"]},"metadata":{},"sourceType":"module"}