{"ast":null,"code":"// `call`, just like a function.\nexport class RawTask {\n  call() {\n    try {\n      this.task && this.task();\n    } catch (error) {\n      this.onError(error);\n    } finally {\n      this.task = null;\n      this.release(this);\n    }\n  }\n\n  constructor(onError, release) {\n    this.onError = onError;\n    this.release = release;\n    this.task = null;\n  }\n\n}","map":{"version":3,"mappings":"AAIA;AACA,OAAO,MAAMA,OAAN,CAAa;EAQnBC,IAAW,GAAG;IACb,IAAI;MACH,KAAKC,IAAL,IAAa,KAAKA,IAAL,EAAb;IACA,CAFD,CAEE,OAAOC,KAAP,EAAc;MACf,KAAKC,OAAL,CAAaD,KAAb;IACA,CAJD,SAIU;MACT,KAAKD,IAAL,GAAY,IAAZ;MACA,KAAKG,OAAL,CAAa,IAAb;IACA;EACD;;EAdDC,YACSF,OADT,EAESC,OAFT,EAGE;SAFOD;SACAC;SAJFH,OAAsB;EAKzB;;AANe","names":["RawTask","call","task","error","onError","release","constructor"],"sources":["C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\@react-dnd\\asap\\src\\RawTask.ts"],"sourcesContent":["// We wrap tasks with recyclable task objects.  A task object implements\n\nimport type { Task, TaskFn } from 'types'\n\n// `call`, just like a function.\nexport class RawTask implements Task {\n\tpublic task: TaskFn | null = null\n\n\tpublic constructor(\n\t\tprivate onError: (err: any) => void,\n\t\tprivate release: (t: RawTask) => void,\n\t) {}\n\n\tpublic call() {\n\t\ttry {\n\t\t\tthis.task && this.task()\n\t\t} catch (error) {\n\t\t\tthis.onError(error)\n\t\t} finally {\n\t\t\tthis.task = null\n\t\t\tthis.release(this)\n\t\t}\n\t}\n}\n"]},"metadata":{},"sourceType":"module"}