{"ast":null,"code":"import { useEffect } from 'react';\nimport { useCollector } from './useCollector.js';\nimport { useDragDropManager } from './useDragDropManager.js';\n/**\n * useDragLayer Hook\n * @param collector The property collector\n */\n\nexport function useDragLayer(collect) {\n  const dragDropManager = useDragDropManager();\n  const monitor = dragDropManager.getMonitor();\n  const [collected, updateCollected] = useCollector(monitor, collect);\n  useEffect(() => monitor.subscribeToOffsetChange(updateCollected));\n  useEffect(() => monitor.subscribeToStateChange(updateCollected));\n  return collected;\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AAGA,SAASC,YAAT,QAA6B,mBAA7B;AACA,SAASC,kBAAT,QAAmC,yBAAnC;AAEA;;;;;AAIA,OAAO,SAASC,YAAT,CACNC,OADM,EAEW;EACjB,MAAMC,eAAe,GAAGH,kBAAkB,EAA1C;EACA,MAAMI,OAAO,GAAGD,eAAe,CAACE,UAAhBF,EAAhB;EACA,MAAM,CAACG,SAAD,EAAYC,eAAZ,IAA+BR,YAAY,CAACK,OAAD,EAAUF,OAAV,CAAjD;EAEAJ,SAAS,CAAC,MAAMM,OAAO,CAACI,uBAARJ,CAAgCG,eAAhCH,CAAP,CAATN;EACAA,SAAS,CAAC,MAAMM,OAAO,CAACK,sBAARL,CAA+BG,eAA/BH,CAAP,CAATN;EACA,OAAOQ,SAAP;AACA","names":["useEffect","useCollector","useDragDropManager","useDragLayer","collect","dragDropManager","monitor","getMonitor","collected","updateCollected","subscribeToOffsetChange","subscribeToStateChange"],"sources":["C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\react-dnd\\src\\hooks\\useDragLayer.ts"],"sourcesContent":["import { useEffect } from 'react'\n\nimport type { DragLayerMonitor } from '../types/index.js'\nimport { useCollector } from './useCollector.js'\nimport { useDragDropManager } from './useDragDropManager.js'\n\n/**\n * useDragLayer Hook\n * @param collector The property collector\n */\nexport function useDragLayer<CollectedProps, DragObject = any>(\n\tcollect: (monitor: DragLayerMonitor<DragObject>) => CollectedProps,\n): CollectedProps {\n\tconst dragDropManager = useDragDropManager()\n\tconst monitor = dragDropManager.getMonitor()\n\tconst [collected, updateCollected] = useCollector(monitor, collect)\n\n\tuseEffect(() => monitor.subscribeToOffsetChange(updateCollected))\n\tuseEffect(() => monitor.subscribeToStateChange(updateCollected))\n\treturn collected\n}\n"]},"metadata":{},"sourceType":"module"}