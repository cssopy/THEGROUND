{"ast":null,"code":"import { invariant } from '@react-dnd/invariant';\nimport { useMemo } from 'react';\nexport function useDragType(spec) {\n  return useMemo(() => {\n    const result = spec.type;\n    invariant(result != null, 'spec.type must be defined');\n    return result;\n  }, [spec]);\n}","map":{"version":3,"mappings":"AAAA,SAASA,SAAT,QAA0B,sBAA1B;AAEA,SAASC,OAAT,QAAwB,OAAxB;AAIA,OAAO,SAASC,WAAT,CACNC,IADM,EAEO;EACb,OAAOF,OAAO,CAAC,MAAM;IACpB,MAAMG,MAAM,GAAeD,IAAI,CAACE,IAAhC;IACAL,SAAS,CAACI,MAAM,IAAI,IAAX,EAAiB,2BAAjB,CAATJ;IACA,OAAOI,MAAP;EACA,CAJa,EAIX,CAACD,IAAD,CAJW,CAAd;AAKA","names":["invariant","useMemo","useDragType","spec","result","type"],"sources":["C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\react-dnd\\src\\hooks\\useDrag\\useDragType.ts"],"sourcesContent":["import { invariant } from '@react-dnd/invariant'\nimport type { Identifier } from 'dnd-core'\nimport { useMemo } from 'react'\n\nimport type { DragSourceHookSpec } from '../types.js'\n\nexport function useDragType(\n\tspec: DragSourceHookSpec<any, any, any>,\n): Identifier {\n\treturn useMemo(() => {\n\t\tconst result: Identifier = spec.type\n\t\tinvariant(result != null, 'spec.type must be defined')\n\t\treturn result\n\t}, [spec])\n}\n"]},"metadata":{},"sourceType":"module"}