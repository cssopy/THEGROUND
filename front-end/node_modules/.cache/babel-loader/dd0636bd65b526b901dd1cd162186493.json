{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { userActions } from \"../../slice/UserSlice\";\nimport { useDispatch } from \"react-redux/es/exports\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst KakaoLoginHandler = props => {\n  _s();\n\n  const {\n    loginType\n  } = props;\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n  const REST_API_KEY = \"1ae04a78365d2a5f1e2e1d4ee529fe84\";\n  const REDIRECT_URI = \"https://j7d109.p.ssafy.io\"; // const REDIRECT_URI = \"http://localhost:3000\";\n  // 인가코드\n\n  let CODE = new URL(window.location.href).searchParams.get(\"code\"); // 카카오로 액세스 토큰 발급 요청\n\n  const getKakaoToken = () => {\n    axios.post(`https://kauth.kakao.com/oauth/token?grant_type=authorization_code&client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&code=${CODE}`, {\n      headers: {\n        \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\"\n      }\n    }, {\n      responseType: \"json\"\n    }).then(res => res.data).then(data => {\n      // 액세스 토큰으로 로그인 요청\n      if (data.access_token) {\n        axios.post(\"https://j7d109.p.ssafy.io/back/users/login\", {\n          accessToken: data.access_token,\n          loginType: \"K\"\n        }, {\n          headers: {\n            \"Content-type\": \"application/json\",\n            Accept: \"application/json\"\n          }\n        }).then(res => {\n          if (res.data.message === \"회원가입을 먼저 해주세요.\") {\n            // 회원가입을 위해 uid를 저장 후 이동\n            // loginType은 로컬 스토리지에 있음\n            dispatch(userActions.setUid(res.data.uid));\n            navigate(\"/\");\n          } else {\n            // jwt 토큰과 유저 이름을 저장 후 메인 페이지로 이동\n            dispatch(userActions.setJwtToken(res.data.jwt));\n            dispatch(userActions.setUserTeamname(res.data.userTeamname));\n            localStorage.removeItem(\"loginType\");\n            localStorage.setItem(\"jwt\", res.data.jwt);\n            navigate(\"/main\");\n          }\n        });\n      } else {\n        navigate(\"/\");\n      }\n    });\n  };\n\n  useEffect(() => {\n    if (!CODE) return;\n\n    if (loginType === \"K\") {\n      getKakaoToken();\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n};\n\n_s(KakaoLoginHandler, \"C8M3Qnh2JtuXRaZXcPUyNRrk+zo=\", false, function () {\n  return [useNavigate, useDispatch];\n});\n\n_c = KakaoLoginHandler;\nexport default KakaoLoginHandler;\n\nvar _c;\n\n$RefreshReg$(_c, \"KakaoLoginHandler\");","map":{"version":3,"names":["useEffect","useNavigate","axios","userActions","useDispatch","KakaoLoginHandler","props","loginType","navigate","dispatch","REST_API_KEY","REDIRECT_URI","CODE","URL","window","location","href","searchParams","get","getKakaoToken","post","headers","responseType","then","res","data","access_token","accessToken","Accept","message","setUid","uid","setJwtToken","jwt","setUserTeamname","userTeamname","localStorage","removeItem","setItem"],"sources":["C:/Users/multicampus/Desktop/projects/theground/front-end/src/landing/components/KakaoLoginHandler.js"],"sourcesContent":["import { useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { userActions } from \"../../slice/UserSlice\";\r\nimport { useDispatch } from \"react-redux/es/exports\";\r\n\r\nconst KakaoLoginHandler = (props) => {\r\n  const { loginType } = props;\r\n  const navigate = useNavigate();\r\n  const dispatch = useDispatch();\r\n\r\n  const REST_API_KEY = \"1ae04a78365d2a5f1e2e1d4ee529fe84\";\r\n  const REDIRECT_URI = \"https://j7d109.p.ssafy.io\";\r\n  // const REDIRECT_URI = \"http://localhost:3000\";\r\n\r\n  // 인가코드\r\n  let CODE = new URL(window.location.href).searchParams.get(\"code\");\r\n\r\n  // 카카오로 액세스 토큰 발급 요청\r\n  const getKakaoToken = () => {\r\n    axios\r\n      .post(\r\n        `https://kauth.kakao.com/oauth/token?grant_type=authorization_code&client_id=${REST_API_KEY}&redirect_uri=${REDIRECT_URI}&code=${CODE}`,\r\n        {\r\n          headers: {\r\n            \"Content-Type\": \"application/x-www-form-urlencoded;charset=utf-8\",\r\n          },\r\n        },\r\n        {\r\n          responseType: \"json\",\r\n        }\r\n      )\r\n      .then((res) => res.data)\r\n      .then((data) => {\r\n        // 액세스 토큰으로 로그인 요청\r\n        if (data.access_token) {\r\n          axios\r\n            .post(\r\n              \"https://j7d109.p.ssafy.io/back/users/login\",\r\n              {\r\n                accessToken: data.access_token,\r\n                loginType: \"K\",\r\n              },\r\n              {\r\n                headers: {\r\n                  \"Content-type\": \"application/json\",\r\n                  Accept: \"application/json\",\r\n                },\r\n              }\r\n            )\r\n            .then((res) => {\r\n              if (res.data.message === \"회원가입을 먼저 해주세요.\") {\r\n                // 회원가입을 위해 uid를 저장 후 이동\r\n                // loginType은 로컬 스토리지에 있음\r\n                dispatch(userActions.setUid(res.data.uid));\r\n                navigate(\"/\");\r\n              } else {\r\n                // jwt 토큰과 유저 이름을 저장 후 메인 페이지로 이동\r\n                dispatch(userActions.setJwtToken(res.data.jwt));\r\n                dispatch(userActions.setUserTeamname(res.data.userTeamname));\r\n                localStorage.removeItem(\"loginType\");\r\n                localStorage.setItem(\"jwt\", res.data.jwt);\r\n                navigate(\"/main\");\r\n              }\r\n            });\r\n        } else {\r\n          navigate(\"/\");\r\n        }\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!CODE) return;\r\n    if (loginType === \"K\") {\r\n      getKakaoToken();\r\n    }\r\n  }, []);\r\n\r\n  return <></>;\r\n};\r\n\r\nexport default KakaoLoginHandler;\r\n"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,uBAA5B;AACA,SAASC,WAAT,QAA4B,wBAA5B;;;;AAEA,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;EAAA;;EACnC,MAAM;IAAEC;EAAF,IAAgBD,KAAtB;EACA,MAAME,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAMQ,QAAQ,GAAGL,WAAW,EAA5B;EAEA,MAAMM,YAAY,GAAG,kCAArB;EACA,MAAMC,YAAY,GAAG,2BAArB,CANmC,CAOnC;EAEA;;EACA,IAAIC,IAAI,GAAG,IAAIC,GAAJ,CAAQC,MAAM,CAACC,QAAP,CAAgBC,IAAxB,EAA8BC,YAA9B,CAA2CC,GAA3C,CAA+C,MAA/C,CAAX,CAVmC,CAYnC;;EACA,MAAMC,aAAa,GAAG,MAAM;IAC1BjB,KAAK,CACFkB,IADH,CAEK,+EAA8EV,YAAa,iBAAgBC,YAAa,SAAQC,IAAK,EAF1I,EAGI;MACES,OAAO,EAAE;QACP,gBAAgB;MADT;IADX,CAHJ,EAQI;MACEC,YAAY,EAAE;IADhB,CARJ,EAYGC,IAZH,CAYSC,GAAD,IAASA,GAAG,CAACC,IAZrB,EAaGF,IAbH,CAaSE,IAAD,IAAU;MACd;MACA,IAAIA,IAAI,CAACC,YAAT,EAAuB;QACrBxB,KAAK,CACFkB,IADH,CAEI,4CAFJ,EAGI;UACEO,WAAW,EAAEF,IAAI,CAACC,YADpB;UAEEnB,SAAS,EAAE;QAFb,CAHJ,EAOI;UACEc,OAAO,EAAE;YACP,gBAAgB,kBADT;YAEPO,MAAM,EAAE;UAFD;QADX,CAPJ,EAcGL,IAdH,CAcSC,GAAD,IAAS;UACb,IAAIA,GAAG,CAACC,IAAJ,CAASI,OAAT,KAAqB,gBAAzB,EAA2C;YACzC;YACA;YACApB,QAAQ,CAACN,WAAW,CAAC2B,MAAZ,CAAmBN,GAAG,CAACC,IAAJ,CAASM,GAA5B,CAAD,CAAR;YACAvB,QAAQ,CAAC,GAAD,CAAR;UACD,CALD,MAKO;YACL;YACAC,QAAQ,CAACN,WAAW,CAAC6B,WAAZ,CAAwBR,GAAG,CAACC,IAAJ,CAASQ,GAAjC,CAAD,CAAR;YACAxB,QAAQ,CAACN,WAAW,CAAC+B,eAAZ,CAA4BV,GAAG,CAACC,IAAJ,CAASU,YAArC,CAAD,CAAR;YACAC,YAAY,CAACC,UAAb,CAAwB,WAAxB;YACAD,YAAY,CAACE,OAAb,CAAqB,KAArB,EAA4Bd,GAAG,CAACC,IAAJ,CAASQ,GAArC;YACAzB,QAAQ,CAAC,OAAD,CAAR;UACD;QACF,CA5BH;MA6BD,CA9BD,MA8BO;QACLA,QAAQ,CAAC,GAAD,CAAR;MACD;IACF,CAhDH;EAiDD,CAlDD;;EAoDAR,SAAS,CAAC,MAAM;IACd,IAAI,CAACY,IAAL,EAAW;;IACX,IAAIL,SAAS,KAAK,GAAlB,EAAuB;MACrBY,aAAa;IACd;EACF,CALQ,EAKN,EALM,CAAT;EAOA,oBAAO,qCAAP;AACD,CAzED;;GAAMd,iB;UAEaJ,W,EACAG,W;;;KAHbC,iB;AA2EN,eAAeA,iBAAf"},"metadata":{},"sourceType":"module"}