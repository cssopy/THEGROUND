{"ast":null,"code":"import * as NativeTypes from '../NativeTypes.js';\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js';\nexport const nativeTypesConfig = {\n  [NativeTypes.FILE]: {\n    exposeProperties: {\n      files: dataTransfer => Array.prototype.slice.call(dataTransfer.files),\n      items: dataTransfer => dataTransfer.items,\n      dataTransfer: dataTransfer => dataTransfer\n    },\n    matchesTypes: ['Files']\n  },\n  [NativeTypes.HTML]: {\n    exposeProperties: {\n      html: (dataTransfer, matchesTypes) => getDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n      dataTransfer: dataTransfer => dataTransfer\n    },\n    matchesTypes: ['Html', 'text/html']\n  },\n  [NativeTypes.URL]: {\n    exposeProperties: {\n      urls: (dataTransfer, matchesTypes) => getDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n      dataTransfer: dataTransfer => dataTransfer\n    },\n    matchesTypes: ['Url', 'text/uri-list']\n  },\n  [NativeTypes.TEXT]: {\n    exposeProperties: {\n      text: (dataTransfer, matchesTypes) => getDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n      dataTransfer: dataTransfer => dataTransfer\n    },\n    matchesTypes: ['Text', 'text/plain']\n  }\n};","map":{"version":3,"mappings":"AAAA,YAAYA,WAAZ,MAA6B,mBAA7B;AACA,SAASC,uBAAT,QAAwC,8BAAxC;AAcA,OAAO,MAAMC,iBAAiB,GAE1B;EACH,CAACF,WAAW,CAACG,IAAb,GAAoB;IACnBC,gBAAgB,EAAE;MACjBC,KAAK,EAAGC,YAAD,IACNC,KAAK,CAACC,SAAND,CAAgBE,KAAhBF,CAAsBG,IAAtBH,CAA2BD,YAAY,CAACD,KAAxCE,CAFgB;MAGjBI,KAAK,EAAGL,YAAD,IACNA,YAAY,CAACK,KAJG;MAKjBL,YAAY,EAAGA,YAAD,IAA8CA;IAL3C,CADC;IAQnBM,YAAY,EAAE,CAAC,OAAD;EARK,CADjB;EAWH,CAACZ,WAAW,CAACa,IAAb,GAAoB;IACnBT,gBAAgB,EAAE;MACjBU,IAAI,EAAE,CAACR,YAAD,EAA6BM,YAA7B,KACLX,uBAAuB,CAACK,YAAD,EAAeM,YAAf,EAA6B,EAA7B,CAFP;MAGjBN,YAAY,EAAGA,YAAD,IAA8CA;IAH3C,CADC;IAMnBM,YAAY,EAAE,CAAC,MAAD,EAAS,WAAT;EANK,CAXjB;EAmBH,CAACZ,WAAW,CAACe,GAAb,GAAmB;IAClBX,gBAAgB,EAAE;MACjBY,IAAI,EAAE,CAACV,YAAD,EAA6BM,YAA7B,KACLX,uBAAuB,CAACK,YAAD,EAAeM,YAAf,EAA6B,EAA7B,CAAvBX,CAAwDgB,KAAxDhB,CAA8D,IAA9DA,CAFgB;MAGjBK,YAAY,EAAGA,YAAD,IAA8CA;IAH3C,CADA;IAMlBM,YAAY,EAAE,CAAC,KAAD,EAAQ,eAAR;EANI,CAnBhB;EA2BH,CAACZ,WAAW,CAACkB,IAAb,GAAoB;IACnBd,gBAAgB,EAAE;MACjBe,IAAI,EAAE,CAACb,YAAD,EAA6BM,YAA7B,KACLX,uBAAuB,CAACK,YAAD,EAAeM,YAAf,EAA6B,EAA7B,CAFP;MAGjBN,YAAY,EAAGA,YAAD,IAA8CA;IAH3C,CADC;IAMnBM,YAAY,EAAE,CAAC,MAAD,EAAS,YAAT;EANK;AA3BjB,CAFG","names":["NativeTypes","getDataFromDataTransfer","nativeTypesConfig","FILE","exposeProperties","files","dataTransfer","Array","prototype","slice","call","items","matchesTypes","HTML","html","URL","urls","split","TEXT","text"],"sources":["C:\\Users\\multicampus\\Desktop\\projects\\theground\\front-end\\node_modules\\react-dnd-html5-backend\\src\\NativeDragSources\\nativeTypesConfig.ts"],"sourcesContent":["import * as NativeTypes from '../NativeTypes.js'\nimport { getDataFromDataTransfer } from './getDataFromDataTransfer.js'\n\nexport interface NativeItemConfigExposePropreties {\n\t[property: string]: (\n\t\tdataTransfer: DataTransfer,\n\t\tmatchesTypes: string[],\n\t) => any\n}\n\nexport interface NativeItemConfig {\n\texposeProperties: NativeItemConfigExposePropreties\n\tmatchesTypes: string[]\n}\n\nexport const nativeTypesConfig: {\n\t[key: string]: NativeItemConfig\n} = {\n\t[NativeTypes.FILE]: {\n\t\texposeProperties: {\n\t\t\tfiles: (dataTransfer: DataTransfer): File[] =>\n\t\t\t\tArray.prototype.slice.call(dataTransfer.files),\n\t\t\titems: (dataTransfer: DataTransfer): DataTransferItemList =>\n\t\t\t\tdataTransfer.items,\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Files'],\n\t},\n\t[NativeTypes.HTML]: {\n\t\texposeProperties: {\n\t\t\thtml: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Html', 'text/html'],\n\t},\n\t[NativeTypes.URL]: {\n\t\texposeProperties: {\n\t\t\turls: (dataTransfer: DataTransfer, matchesTypes: string[]): string[] =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, '').split('\\n'),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Url', 'text/uri-list'],\n\t},\n\t[NativeTypes.TEXT]: {\n\t\texposeProperties: {\n\t\t\ttext: (dataTransfer: DataTransfer, matchesTypes: string[]): string =>\n\t\t\t\tgetDataFromDataTransfer(dataTransfer, matchesTypes, ''),\n\t\t\tdataTransfer: (dataTransfer: DataTransfer): DataTransfer => dataTransfer,\n\t\t},\n\t\tmatchesTypes: ['Text', 'text/plain'],\n\t},\n}\n"]},"metadata":{},"sourceType":"module"}